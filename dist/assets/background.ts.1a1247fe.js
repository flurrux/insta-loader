import{b as r}from"./vendor.adf0e26f.js";async function a(e,t){try{const s=await r.exports.downloads.download({url:t.url,filename:t.filePath,conflictAction:"prompt"});e.postMessage({type:"download-id",id:s})}catch(s){e.postMessage({type:"error",error:s})}}async function d(e,t){const s=await r.exports.downloads.search({id:t.id});if(s.length===0){e.postMessage({type:"error",error:"download started but file not found. this may be a problem with the browser."});return}s.length>1&&console.warn("more than one file for this download found. this should not happen");const o=s[0],n=o.state;if(n==="interrupted"){e.postMessage({type:"error",error:o.error});return}if(n==="complete"){e.postMessage({type:"success"});return}if(n==="in_progress"){e.postMessage({type:"progress",progress:{bytesReceived:o.bytesReceived,totalBytes:o.totalBytes,progress:o.bytesReceived/o.totalBytes}});return}}r.exports.runtime.onConnect.addListener(e=>{e.name==="chrome-downloader"&&(e.onDisconnect.addListener(()=>console.log("port disconnected")),e.onMessage.addListener(async(t,s)=>{if(console.log(t),t.type==="request-download"){a(e,t);return}t.type==="request-state"&&d(e,t)}))});console.log("listening for instagram API calls ...");function i(e){const t={};for(const{name:s,value:o}of e)o!==void 0&&(t[s]=o);return t}function c(e){const{tabId:t,url:s}=e,o=/(?<=instagram\.com\/api\/v1\/media\/)\d*(?=\/info)/.exec(s);if(!o)return;const n=o[0];console.log("detected media ID!",n),r.exports.tabs.sendMessage(t,{mediaID:n})}r.exports.webRequest.onSendHeaders.addListener(c,{urls:["*://i.instagram.com/api/*","*://www.instagram.com/api/*"]},["requestHeaders"]);r.exports.webRequest.onSendHeaders.addListener(e=>{r.exports.tabs.sendMessage(e.tabId,{requestHeaders:i(e.requestHeaders)})},{urls:["*://www.instagram.com/graphql/query"]},["requestHeaders"]);r.exports.webRequest.onBeforeRequest.addListener(e=>{r.exports.tabs.sendMessage(e.tabId,{requestBody:e.requestBody?.formData})},{urls:["*://www.instagram.com/graphql/query"]},["requestBody"]);r.exports.webNavigation.onHistoryStateUpdated.addListener(e=>{console.log("waking up")});
