{"mappings":"AAwBAA,OAAOC,QAAQC,UAAUC,aAAY,SAAUC,GAC5B,sBAAdA,EAAKC,OACTD,EAAKE,aAAaH,aAAY,IAAMI,QAAQC,IAAI,uBAChDJ,EAAKK,UAAUN,aAAYO,MAAOC,EAA6CC,KApBjDC,IAAAA,KAqB7BN,QAAQC,IAAIG,GAEK,qBAAbA,EAAIG,KAoBS,kBAAbH,EAAIG,MACPd,OAAOe,UAAUC,OAAAA,CAASC,GAAIN,EAAIM,KAAOC,OACnB,IAAjBA,EAAMC,QAQLD,EAAMC,OAAS,GAClBZ,QAAQa,KAAK,2EAERC,EAAOH,EAAM,GACbI,EAAQD,EAAKC,SACL,gBAAVA,cACHlB,EAAKmB,YAAAA,CACJT,KAAM,QACNU,MAAOH,EAAKG,WAIA,aAAVF,cACHlB,EAAKmB,YAAAA,CACJT,KAAM,eAIM,gBAAVQ,cACHlB,EAAKmB,YAAAA,CACJT,KAAM,WACNW,SAAAA,CACCC,cAAeL,EAAKK,cACpBC,WAAYN,EAAKM,WACjBF,SAAWJ,EAAKK,cAAgBL,EAAKM,mBA/BxCvB,EAAKmB,YAAAA,CACJT,KAAM,QACNU,MAAO,8FAvBHP,QAzBqBJ,EAyBVe,CAChBC,IAAKlB,EAAIkB,IACTC,SAAUnB,EAAIoB,SACdC,eAAgB,iBA3BTC,SAAQ,CAACC,EAASC,KAC5BnC,OAAOe,UAAUqB,SAChBvB,GACCwB,SACmBC,IAAfD,EACHF,EAAOnC,OAAOC,QAAQsC,UAAUC,SAGhCN,EAAQG,UAqBTjC,EAAKmB,YAAAA,CACJT,KAAM,cAAeG,GAAAA,UAGhBwB,GACNrC,EAAKmB,YAAAA,CACJT,KAAM,QACNU,MAAOiB","sources":["./app/src/disk-writing/chrome-download-background.ts"],"sourcesContent":["import { DownloadRequest, DownloadProgressResponse, DownloadSuccessResponse, DownloadErrorResponse, DownloadProgressCallback, DownloadProgress, DownloadStateRequest, DownloadIdResponse } from \"./chrome-download-types\";\n\n\n// type InterruptReason = \"FILE_FAILED\" | \"FILE_ACCESS_DENIED\" | \"FILE_NO_SPACE\" | \"FILE_NAME_TOO_LONG\" | \"FILE_TOO_LARGE\" | \"FILE_VIRUS_INFECTED\" | \"FILE_TRANSIENT_ERROR\" | \"FILE_BLOCKED\" | \"FILE_SECURITY_CHECK_FAILED\" | \"FILE_TOO_SHORT\" | \"FILE_HASH_MISMATCH\" | \"FILE_SAME_AS_SOURCE\" | \"NETWORK_FAILED\" | \"NETWORK_TIMEOUT\" | \"NETWORK_DISCONNECTED\" | \"NETWORK_SERVER_DOWN\" | \"NETWORK_INVALID_REQUEST\" | \"SERVER_FAILED\" | \"SERVER_NO_RANGE\" | \"SERVER_BAD_CONTENT\" | \"SERVER_UNAUTHORIZED\" | \"SERVER_CERT_PROBLEM\" | \"SERVER_FORBIDDEN\" | \"SERVER_UNREACHABLE\" | \"SERVER_CONTENT_LENGTH_MISMATCH\" | \"SERVER_CROSS_ORIGIN_REDIRECT\" | \"USER_CANCELED\" | \"USER_SHUTDOWN\" | \"CRASH\";\ntype DownloadItem = chrome.downloads.DownloadItem;\ntype DownloadOptions = chrome.downloads.DownloadOptions;\n\nconst startDownloadAndGetId = (options: DownloadOptions): Promise<number> => {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.downloads.download(\n\t\t\toptions,\n\t\t\t(downloadId: number) => {\n\t\t\t\tif (downloadId === undefined) {\n\t\t\t\t\treject(chrome.runtime.lastError.message);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(downloadId);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t});\n};\n\n\nchrome.runtime.onConnect.addListener(function (port) {\n\tif (port.name !== \"chrome-downloader\") return;\n\tport.onDisconnect.addListener(() => console.log(\"port disconnected\"));\n\tport.onMessage.addListener(async (msg: DownloadRequest | DownloadStateRequest, sender) => {\n\t\tconsole.log(msg);\n\t\t\n\t\tif (msg.type === \"request-download\"){\n\t\t\ttry {\n\t\t\t\tconst id = await startDownloadAndGetId({\n\t\t\t\t\turl: msg.url,\n\t\t\t\t\tfilename: msg.filePath,\n\t\t\t\t\tconflictAction: \"overwrite\"\n\t\t\t\t});\n\t\t\t\tport.postMessage({\n\t\t\t\t\ttype: \"download-id\", id\n\t\t\t\t} as DownloadIdResponse);\n\t\t\t}\n\t\t\tcatch (e){\n\t\t\t\tport.postMessage({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\terror: e\n\t\t\t\t} as DownloadErrorResponse);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (msg.type === \"request-state\"){\n\t\t\tchrome.downloads.search({ id: msg.id }, (items: DownloadItem[]) => {\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\tport.postMessage({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\terror: \"download started but file not found. this may be a problem with chrome.\"\n\t\t\t\t\t} as DownloadErrorResponse);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (items.length > 1) {\n\t\t\t\t\t\tconsole.warn(\"more than one file for this download found. this shoud not happen\");\n\t\t\t\t\t}\n\t\t\t\t\tconst item = items[0];\n\t\t\t\t\tconst state = item.state;\n\t\t\t\t\tif (state === \"interrupted\"){\n\t\t\t\t\t\tport.postMessage({\n\t\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\t\terror: item.error\n\t\t\t\t\t\t} as DownloadErrorResponse);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (state === \"complete\") {\n\t\t\t\t\t\tport.postMessage({\n\t\t\t\t\t\t\ttype: \"success\"\n\t\t\t\t\t\t} as DownloadSuccessResponse);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (state === \"in_progress\"){\n\t\t\t\t\t\tport.postMessage({\n\t\t\t\t\t\t\ttype: \"progress\",\n\t\t\t\t\t\t\tprogress: {\n\t\t\t\t\t\t\t\tbytesReceived: item.bytesReceived,\n\t\t\t\t\t\t\t\ttotalBytes: item.totalBytes,\n\t\t\t\t\t\t\t\tprogress: (item.bytesReceived / item.totalBytes)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} as DownloadProgressResponse);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t});\n});"],"names":["chrome","runtime","onConnect","addListener","port","name","onDisconnect","console","log","onMessage","async","msg","sender","options","type","downloads","search","id","items","length","warn","item","state","postMessage","error","progress","bytesReceived","totalBytes","$5a23120a5c9ace6b868d5f4894cee72a$var$startDownloadAndGetId","url","filename","filePath","conflictAction","Promise","resolve","reject","download","downloadId","undefined","lastError","message","e"],"version":3,"file":"chrome-download-background.js.map"}