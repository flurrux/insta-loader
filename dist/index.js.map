{"mappings":"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","sources":["./app/src/insta-navigation-observer.ts","./app/src/insta-info-util.ts","./app/src/insta-change-detection.ts","./app/src/download-buttons/download-feedback-button.ts","./app/src/download-buttons/disk-download-button.ts","./app/lib/url-to-filename.ts","./app/src/disk-writing/lookup-write-path.ts","./app/src/disk-writing/disk-download.ts","./app/src/disk-writing/chrome-download.ts","./app/lib/html-util.ts","./app/src/download-extension/post-extension.ts","./app/src/download-extension/preview-extension.ts","./app/src/download-shortcut.ts","./app/src/download-extension/story-extension.ts","./app/src/download-extension/combined-download-extension.ts","./app/src/post-scroll-navigation.ts","./app/src/horizontal-navigation.ts"],"sourcesContent":["\n\ntype InstaPageType = \"mainFeed\" | \"post\" | \"personFeed\" | \"stories\" | \"reel\";\n\n//missing:\n//tagFeed\n//savedFeed\nexport const pageType: { [key: string]: InstaPageType } = {\n\tmainFeed: \"mainFeed\",\n\tpost: \"post\",\n\tpersonFeed: \"personFeed\",\n\tstories: \"stories\"\n};\nexport const getCurrentPageType = (): InstaPageType => {\n\tlet href = window.location.href;\n\tif (href.endsWith(\"instagram.com/\") || href.includes(\".com/?\")) {\n\t\treturn pageType.mainFeed;\n\t}\n\telse if (href.includes(\"/p/\")) {\n\t\treturn pageType.post;\n\t}\n\telse if (href.includes(\"/reel/\")){\n\t\treturn \"reel\";\n\t}\n\telse if (href.includes(\"/stories/\")) {\n\t\treturn pageType.stories;\n\t}\n\telse {\n\t\treturn pageType.personFeed;\n\t}\n};\n\ninterface InstaNavigationChangeData {\n\toldHref: string,\n\tnewHref: string,\n\toldPageType: InstaPageType,\n\tnewPageType: InstaPageType\n};\ntype InstaNavigationCallback = (data: InstaNavigationChangeData) => void;\n\nconst onNavigation: InstaNavigationCallback[] = [];\nexport const subscribeToNavigation = (callback: InstaNavigationCallback) => {\n\tonNavigation.push(callback);\n};\nconst invokeViewModeChangeListener = (data: InstaNavigationChangeData) => {\n\tonNavigation.forEach(callback => callback(data));\n};\n\n//main feed || stories || other\nlet currentHref: string = window.location.href;\nlet currentPageType: InstaPageType = getCurrentPageType();\nconst reactRoot: Element = document.querySelector(\"#react-root\");\nconst onRootMutation = () => {\n\tconst newHref = window.location.href;\n\tif (newHref === currentHref) {\n\t\treturn;\n\t}\n\tconst oldHref = currentHref;\n\tconst oldPageType = currentPageType;\n\tcurrentHref = newHref;\n\tcurrentPageType = getCurrentPageType();\n\tconst naviData: InstaNavigationChangeData = {\n\t\toldHref, newHref,\n\t\toldPageType, \n\t\tnewPageType: currentPageType\n\t};\n\tinvokeViewModeChangeListener(naviData);\n};\n(new MutationObserver(onRootMutation)).observe(reactRoot, { childList: true, subtree: true })","import { getCurrentPageType } from './insta-navigation-observer';\r\n\r\nexport type InstaElementType = \"preview\" | \"post\" | \"story\";\r\n\r\nexport type VideoOrImageElement = HTMLVideoElement | HTMLImageElement;\r\n\r\nexport const getElementTypesOnCurrentPage = (): InstaElementType[] => {\r\n\tconst curPageType = getCurrentPageType();\r\n\tif (curPageType === \"personFeed\"){\r\n\t\treturn [\"preview\"];\r\n\t}\r\n\telse if (curPageType === \"stories\") {\r\n\t\treturn [\"story\"];\r\n\t}\r\n\treturn [\"post\"];\r\n};\r\n\r\n\r\ninterface QualityAndSource {\r\n\tquality: number,\r\n\tsrc: string\r\n}\r\nfunction parseSingleQualityAndSrc(entry: string): QualityAndSource {\r\n\tconst splitted = entry.split(\" \");\r\n\treturn {\r\n\t\tsrc: splitted[0],\r\n\t\tquality: parseInt(splitted[1])\r\n\t}\r\n}\r\nfunction parseAllQualityAndSrc(srcset: string): QualityAndSource[] {\r\n\treturn srcset.split(\",\").map(parseSingleQualityAndSrc);\r\n}\r\nexport function getHighestQualityFromSrcset(srcset: string): string {\r\n\tconst qualityAndSources = parseAllQualityAndSrc(srcset);\r\n\tlet maxQualIndex = 0;\r\n\tfor (let i = 1; i < qualityAndSources.length; i++){\r\n\t\tconst curQual = qualityAndSources[i].quality;\r\n\t\tif (curQual > qualityAndSources[maxQualIndex].quality){\r\n\t\t\tmaxQualIndex = i;\r\n\t\t}\r\n\t}\r\n\treturn qualityAndSources[maxQualIndex].src;\r\n};\r\n\r\ninterface SrcSetEntry {\r\n\tsrc: string,\r\n\tconfig_width: number,\r\n\tconfig_height: number\r\n};\r\nconst getHighestQualityFromSrcsetArray = (srcsetArray: SrcSetEntry[]): string => {\r\n\tlet maxWidthIndex = 0;\r\n\tlet maxWidth = srcsetArray[0].config_width;\r\n\tfor (let i = 1; i < srcsetArray.length; i++){\r\n\t\tconst curWidth = srcsetArray[i].config_width;\r\n\t\tif (curWidth > maxWidth){\r\n\t\t\tmaxWidthIndex = i;\r\n\t\t\tmaxWidth = curWidth;\r\n\t\t}\r\n\t}\r\n\treturn srcsetArray[maxWidthIndex].src;\r\n};\r\n\r\nexport const getOwnUsername = (): string => {\r\n\treturn /(?<=\"username\":\")[^\"]*/.exec(document.body.innerHTML)[0];\r\n};\r\n\r\nconst queryLargestImage = (parent: HTMLElement): (HTMLImageElement | null) => {\r\n\treturn Array.from(parent.querySelectorAll(\"img\")).find(img => img.offsetHeight > 400);\r\n};\r\n\r\nconst queryVideoOrImg = (parent: HTMLElement) => {\r\n\tconst videoOrImgWithSrcSet = parent.querySelector(\"video, img[srcset]\") as (VideoOrImageElement | null);\r\n\tif (videoOrImgWithSrcSet) return videoOrImgWithSrcSet;\r\n\treturn queryLargestImage(parent);\r\n};\r\n\r\n\r\n//fetching ###\r\n\r\nexport interface VideoInfo {\r\n\ttype: \"video\",\r\n\tsrc: string,\r\n\tpreviewSrc: string\r\n};\r\nexport interface ImgInfo {\r\n\ttype: \"image\", \r\n\tsrcset: SrcSetEntry[],\r\n\tsrc: string,\r\n\tpreviewSrc: string\r\n};\r\nexport type VideoOrImgInfo = VideoInfo | ImgInfo;\r\ntype PostType = \"collection\" | \"video\" | \"image\";\r\nexport interface MediaInfo {\r\n\tusername: string,\r\n\tpostType: PostType,\r\n\tmediaArray: VideoOrImgInfo[]\r\n}\r\nexport interface SingleMediaInfo { \r\n\tusername: string, \r\n\tsrc: string, \r\n\ttype: \"video\" | \"image\"\r\n}\r\n\r\nconst getMediaInfoFromResponseText = (responseText: string): MediaInfo => {\r\n\tconst dataText = /(?<=window\\.__additionalDataLoaded\\(.*',).*(?=\\);<)/.exec(responseText);\r\n\tif (!dataText) throw '__additionalDataLoaded not found on window';\r\n\r\n\tconst dataObject = JSON.parse(dataText[0]);\r\n\r\n\tif (!dataObject.graphql) throw 'graphql not found';\r\n\tif (!dataObject.graphql.shortcode_media) throw 'shortcode_media not found';\r\n\r\n\tconst postInfo = dataObject.graphql.shortcode_media;\r\n\tconst username: string = postInfo.owner.username;\r\n\t\r\n\tconst [postType, subMedia] = postInfo.edge_sidecar_to_children !== undefined ? \r\n\t\t[ \"collection\", (postInfo.edge_sidecar_to_children.edges).map(el => el.node) ] : \r\n\t\t[ postInfo.video_url !== undefined ? \"video\" : \"image\", [postInfo] ];\r\n\r\n\tconst mediaArray: VideoOrImgInfo[] = [];\r\n\tfor (let a = 0; a < subMedia.length; a++) {\r\n\t\tlet subMed = subMedia[a];\r\n\t\tlet subObj: Partial<VideoOrImgInfo> = {\r\n\t\t\tpreviewSrc: subMed.display_url\r\n\t\t};\r\n\r\n\t\tif (subMed.video_url !== undefined) {\r\n\t\t\tObject.assign(subObj, {\r\n\t\t\t\ttype: \"video\",\r\n\t\t\t\tsrc: subMed.video_url\r\n\t\t\t} as Partial<VideoInfo>)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst srcset = subMed.display_resources as SrcSetEntry[];\r\n\t\t\tconst highQualitySrc = getHighestQualityFromSrcsetArray(srcset);\r\n\t\t\tObject.assign(subObj, {\r\n\t\t\t\ttype: \"image\",\r\n\t\t\t\tsrcset, \r\n\t\t\t\tsrc: highQualitySrc\r\n\t\t\t} as Partial<ImgInfo>)\r\n\t\t}\r\n\r\n\t\tmediaArray.push(subObj as VideoOrImgInfo);\r\n\t}\r\n\r\n\tif (mediaArray.length === 0) {\r\n\t\tthrow 'no media found';\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tpostType,\r\n\t\tmediaArray,\r\n\t\tusername\r\n\t} as MediaInfo;\r\n};\r\nexport const fetchMediaInfo = (url: string): Promise<MediaInfo> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst request = new XMLHttpRequest();\r\n\t\r\n\t\tfunction transferComplete(){\r\n\t\t\ttry {\r\n\t\t\t\tconst data = getMediaInfoFromResponseText(this.responseText);\r\n\t\t\t\tresolve(data);\r\n\t\t\t}\r\n\t\t\tcatch (e){\r\n\t\t\t\treject(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\trequest.addEventListener(\"load\", transferComplete);\r\n\t\trequest.addEventListener(\"error\", reject);\r\n\t\trequest.addEventListener(\"abort\", reject);\r\n\t\r\n\t\trequest.open(\"GET\", url);\r\n\t\trequest.send();\r\n\t});\r\n};\r\n\r\n\r\n//main-feed ###\r\n\r\nexport function findMainFeedPostsContainer(): HTMLDivElement {\r\n\treturn document.querySelector(\"article\").parentElement as HTMLDivElement\r\n}\r\nexport function findMainFeedPosts(): HTMLElement[] {\r\n\treturn Array.from(findMainFeedPostsContainer().children) as HTMLElement[]\r\n}\r\n\r\n\r\n//post ###\r\n\r\nexport const getPreviewSrcOfPost = (postElement: HTMLElement): string => {\r\n\tconst queries = [\"video[poster]\", \"img[srcset]\"];\r\n\tconst previewAttr = [\"poster\", \"src\"];\r\n\tfor (let a = 0; a < previewAttr.length; a++){\r\n\t\tconst found = postElement.querySelector(queries[a]);\r\n\t\tif (found !== null){\r\n\t\t\tconst previewSrc = found.getAttribute(previewAttr[a]);\r\n\t\t\treturn previewSrc;\r\n\t\t}\r\n\t}\r\n};\r\nexport const getHrefOfPost = (postElement: HTMLElement): string => {\r\n\tconst linkElements = postElement.querySelectorAll('a[href*=\"/p/\"') as NodeListOf<HTMLLinkElement>;\r\n\tconst href = linkElements[linkElements.length - 1].href;\r\n\tconst startIndex = href.indexOf(\"/p/\") + 3;\r\n\tconst endIndex = href.indexOf(\"/\", startIndex);\r\n\treturn href.substring(0, endIndex + 1);\r\n};\r\nexport const findMediaElementInPost = (postElement: HTMLElement): VideoOrImageElement => {\r\n\treturn queryVideoOrImg(postElement);\r\n};\r\nconst findUsernameInPost = (postElement: HTMLElement): string => {\r\n\tconst profileLink = (postElement.querySelector(\"header a\") as HTMLLinkElement).href;\r\n\treturn /(?<=\\.com\\/).*(?=\\/)/.exec(profileLink)[0];\r\n};\r\nconst findTypeOfPost = (postElement: HTMLElement): PostType => {\r\n\t// if (postElement.querySelector(\"ul img[srcset], ul video\") !== null) return \"collection\";\r\n\tif (postElement.querySelector('[class*=\"Chevron\"]')) return \"collection\";\r\n\tconst mediaElement = findMediaElementInPost(postElement);\r\n\tif (!mediaElement){\r\n\t\tconsole.warn(\"no media-element found\");\r\n\t\tconsole.log(postElement.innerHTML);\r\n\t}\r\n\treturn mediaElement.tagName === \"VIDEO\" ? \"video\" : \"image\";\r\n};\r\nconst extractMediaFromElement = (mediaElement: VideoOrImageElement): Omit<SingleMediaInfo, \"username\"> => {\r\n\tconst type = mediaElement.tagName === \"VIDEO\" ? \"video\" : \"image\";\r\n\tconst src = type === \"video\" ? mediaElement.src : getHighestQualityFromSrcset((mediaElement as HTMLImageElement).srcset);\r\n\treturn { type, src };\r\n};\r\nfunction getCurrentCollectionIndex(postEl: HTMLElement): number {\r\n\tconst list = postEl.querySelector(\"ul\");\r\n\treturn getCurrentCollectionIndexByList(list);\r\n}\r\nfunction getCurrentCollectionIndexByList(list: HTMLUListElement): number {\r\n\t//the actual first item at index 0 is some kind of marker with width 1\r\n\tconst firstItem = list.children[1];\r\n\tconst listItemWidth = parseFloat(getComputedStyle(firstItem).getPropertyValue(\"width\"));\r\n\tconst positionReferenceElement = list.parentElement.parentElement;\r\n\tconst visibleX = positionReferenceElement.getBoundingClientRect().x;\r\n\r\n\tfor (let i = 1; i < list.children.length; i++) {\r\n\t\tconst listItem = list.children[i];\r\n\t\tconst curItemX = listItem.getBoundingClientRect().x;\r\n\t\tif (Math.abs(visibleX - curItemX) < listItemWidth / 2) {\r\n\t\t\treturn i - 1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\nfunction getCurrentCollectionElement(postEl: HTMLElement): HTMLElement {\r\n\tconst list = postEl.querySelector(\"ul\");\r\n\tconst listIndex = getCurrentCollectionIndexByList(list);\r\n\treturn list.children[listIndex + 1] as HTMLElement;\r\n}\r\nconst getCollectionMediaByPostElement = (postElement: HTMLElement) => {\r\n\tconst list = postElement.querySelector(\"ul\");\r\n\t//the actual first item at index 0 is some kind of marker with width 1\r\n\tconst firstItem = list.children[1];\r\n\tconst listItemWidth = parseFloat(getComputedStyle(firstItem).getPropertyValue(\"width\"));\r\n\tconst positionReferenceElement = list.parentElement.parentElement;\r\n\tconst visibleX = positionReferenceElement.getBoundingClientRect().x;\r\n\r\n\tfor (let i = 1; i < list.children.length; i++) {\r\n\t\tconst listItem = list.children[i];\r\n\t\tconst curItemX = listItem.getBoundingClientRect().x;\r\n\t\tif (Math.abs(visibleX - curItemX) < listItemWidth / 2) {\r\n\t\t\tconst mediaEl = queryVideoOrImg(listItem as HTMLElement);\r\n\t\t\treturn extractMediaFromElement(mediaEl);\r\n\t\t}\r\n\t}\r\n};\r\nconst getSingleMediaInfoByPostElement = (postElement: HTMLElement) => {\r\n\treturn extractMediaFromElement(findMediaElementInPost(postElement));\r\n};\r\nexport const getMediaInfoByHtml = (postElement: HTMLElement): SingleMediaInfo => {\r\n\tconst username = findUsernameInPost(postElement);\r\n\tconst postType = findTypeOfPost(postElement);\r\n\tconst media = postType === \"collection\" ? getCollectionMediaByPostElement(postElement) : getSingleMediaInfoByPostElement(postElement);\r\n\treturn { username, ...media };\r\n};\r\n\r\nfunction findMediaEntryByVideo(mediaArray: VideoOrImgInfo[], videoEl: HTMLVideoElement): VideoInfo {\r\n\tconst poster = videoEl.poster;\r\n\tif (poster === \"\") {\r\n\t\tconsole.warn(\"cannot find the position for this collection-element!\");\r\n\t\treturn null;\r\n\t}\r\n\tconst trimmedPoster = /^https:\\/\\/.*\\.jpg/.exec(poster)[0];\r\n\tconst mediaIndex = mediaArray.findIndex(val => val.previewSrc.includes(trimmedPoster));\r\n\tif (mediaIndex < 0) {\r\n\t\tconsole.warn(\"poster does not match any previews, therefore cannot find the index for this item\");\r\n\t\tconsole.log(poster, trimmedPoster, mediaArray);\r\n\t\treturn null;\r\n\t}\r\n\treturn mediaArray[mediaIndex] as VideoInfo;\r\n}\r\nfunction findMediaEntryByImage(mediaArray: VideoOrImgInfo[], imgEl: HTMLImageElement): ImgInfo {\r\n\tlet highQualiSrc = \"\";\r\n\tconst srcset = imgEl.srcset;\r\n\tif (srcset){\r\n\t\thighQualiSrc = getHighestQualityFromSrcset(srcset);\r\n\t}\r\n\telse {\r\n\t\thighQualiSrc = imgEl.src;\r\n\t}\r\n\treturn {\r\n\t\ttype: \"image\",\r\n\t\tsrc: highQualiSrc,\r\n\t\tpreviewSrc: \"\",\r\n\t\tsrcset: [],\r\n\t}\r\n}\r\nfunction findMediaEntryByCollection(mediaArray: VideoOrImgInfo[], postElement: HTMLElement): VideoOrImgInfo {\r\n\tconst collectionElement = getCurrentCollectionElement(postElement);\r\n\tconst mediaElement = findMediaElementInPost(collectionElement);\r\n\tif (mediaElement.matches(\"video\")) {\r\n\t\treturn findMediaEntryByVideo(mediaArray, mediaElement as HTMLVideoElement);\r\n\t}\r\n\telse {\r\n\t\treturn findMediaEntryByImage(mediaArray, mediaElement as HTMLImageElement);\r\n\t}\r\n}\r\nexport function createMediaFetcherBySrcElement(postElement: HTMLElement) {\r\n\tlet currentMediaInfo: MediaInfo = null;\r\n\tlet currentPostType: PostType = null;\r\n\treturn async(): Promise<SingleMediaInfo> => {\r\n\t\tif (!currentPostType){\r\n\t\t\tcurrentPostType = findTypeOfPost(postElement);\r\n\t\t}\r\n\t\tif (!currentMediaInfo){\r\n\t\t\tconst postHref = getHrefOfPost(postElement);\r\n\t\t\tcurrentMediaInfo = await fetchMediaInfo(postHref);\r\n\t\t}\r\n\t\tconst username = currentMediaInfo.username;\r\n\t\tconst mediaArray = currentMediaInfo.mediaArray;\r\n\t\tconst videoOrImgInfo = currentPostType === \"collection\" ? findMediaEntryByCollection(mediaArray, postElement) : mediaArray[0];\r\n\t\tif (!videoOrImgInfo){\r\n\t\t\tconsole.error(\"could not find media of the current collection item!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn { username, ...videoOrImgInfo }\r\n\t}\r\n}\r\n\r\n\r\nfunction calculatePostDistanceToViewport(postEl: HTMLElement): number {\r\n\tconst rect = postEl.getBoundingClientRect();\r\n\tconst centerY = (rect.top + rect.bottom) / 2;\r\n\treturn Math.abs(centerY - window.innerHeight / 2);\r\n}\r\nexport function findCurrentPost(): HTMLElement {\r\n\tconst posts = findMainFeedPosts();\r\n\tconst closestPostData: [number, HTMLElement] = posts.reduce(\r\n\t\t(acc: [number, HTMLElement], postEl: HTMLElement) => {\r\n\t\t\tconst dist = calculatePostDistanceToViewport(postEl);\r\n\t\t\treturn dist < acc[0] ? [dist, postEl] as [number, HTMLElement] : acc\r\n\t\t},\r\n\t\t[Infinity, null]\r\n\t);\r\n\treturn closestPostData[1];\r\n}\r\n\r\n\r\n//story ###\r\n\r\nexport const getSrcOfStory = (storyElement: HTMLElement): string => {\r\n\tconst video = storyElement.querySelector(\"video\");\r\n\tif (video !== null){\r\n\t\t//there seems to be several sources that have different file sizes\r\n\t\t//when downloaded. i want to get the biggest file, cuz that's probably\r\n\t\t//where the quality is. after some research i found out the sources use different\r\n\t\t//video codecs for compression.\r\n\t\t//there are 3 \"tiers\": baseline, main and high and that's what\r\n\t\t//these 3 numbers mean (42, 4D, 64). to get the highest possible level, \r\n\t\t//we just sort the sources by that tier\r\n\t\tconst sources = Array.from(video.querySelectorAll(\"source\"));\r\n\t\tconst codecOrder = [\"42\", \"4D\", \"64\"];\r\n\t\tconst getOrderOfCodec = (codec) => {\r\n\t\t\treturn codecOrder.findIndex(val => codec.type.includes(val));\r\n\t\t};\r\n\t\tconst sourceSortFunc = (a, b) => getOrderOfCodec(a) - getOrderOfCodec(b);\r\n\t\tsources.sort(sourceSortFunc);\r\n\t\treturn sources[sources.length - 1].src;\r\n\t}\r\n\telse {\r\n\t\tconst img = storyElement.querySelector('img[srcset]') as HTMLImageElement;\r\n\t\tif (img !== null){\r\n\t\t\treturn getHighestQualityFromSrcset(img.srcset);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\nfunction findUsernameOnProfilePage(): string {\r\n\tconst metaEl = document.querySelector('meta[property=\"og:url\"]') as HTMLMetaElement;\r\n\tif (!metaEl) return null;\r\n\tconst pageUrl = metaEl.content;\r\n\tconst usernameMatch = pageUrl.match(/(?<=\\.com\\/).*(?=\\/)/);\r\n\tif (!usernameMatch) return null;\r\n\treturn usernameMatch[0];\r\n}\r\nexport function getUsernameOfStory(): string {\r\n\tconst url = window.location.href;\r\n\tif (url.startsWith(\"https://www.instagram.com/stories/highlights/\")){\r\n\t\t// return window._sharedData.entry_data.ProfilePage[0].graphql.user.username;\r\n\t\treturn findUsernameOnProfilePage();\r\n\t}\r\n\treturn getUsernameByStoryUrl(url);\r\n}\r\nexport const getUsernameByStoryUrl = (storyUrl: string): string => {\r\n\treturn /(?<=stories\\/).*?(?=\\/)/.exec(storyUrl)[0];\r\n};\r\nexport const getUsernameByStoryElement = (storyElement: HTMLElement) => {\r\n\treturn Array.from(\r\n\t\tstoryElement.querySelectorAll(\"span\")\r\n\t).find(span => span.children.length === 0).innerText;\r\n};\r\nexport const findStoryElement = (): HTMLElement => {\r\n\tconst parent = document.body;\r\n\tconst firstCanvas = parent.querySelector(\"button canvas\");\r\n\tif (!firstCanvas) {\r\n\t\treturn;\r\n\t}\r\n\tlet currentChild = firstCanvas.parentElement;\r\n\tfor (let a = 0; a < 10000; a++) {\r\n\t\tconst currentParent = currentChild.parentElement;\r\n\t\tif (!currentParent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (currentParent.offsetHeight - currentChild.offsetHeight < 0) {\r\n\t\t\treturn currentParent;\r\n\t\t}\r\n\t\tcurrentChild = currentParent;\r\n\t}\r\n\tconsole.warn(\"either something went wrong or the dom is very large\");\r\n};\r\n// export const storyNodeToData = (node: HTMLElement) => {\r\n// \treturn {\r\n// \t\tthumbnail: node.querySelector(\"img\").src,\r\n// \t\tname: getUsernameByStoryElement(node),\r\n// \t\trelativeTime: node.querySelector(\"time\").innerHTML,\r\n// \t\tseen: node.querySelector(\"canvas\").width < 55\r\n// \t};\r\n// };\r\n// export const getStoryData = (scrollEl: HTMLElement) => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\t//const scrollEl = null;\r\n// \t\tconst storyContainer = scrollEl.children[0];\r\n// \t\tconst stories = [];\r\n// \t\tconst storyElementHeight = 52;\r\n// \t\tconst scrollDeltaCount = 5;\r\n\r\n// \t\tconst childrenChangeObserver = new MutationObserver(async (mutations) => {\r\n// \t\t\tconst addedNodes = (mutations.map(\r\n// \t\t\t\tmutation => Array.from(mutation.addedNodes)\r\n// \t\t\t) as any).flat();\r\n// \t\t\tstories.push(...addedNodes.map(storyNodeToData));\r\n// \t\t\tconst scrollBottom = scrollEl.scrollHeight - (scrollEl.scrollTop + scrollEl.offsetHeight);\r\n// \t\t\tif (Math.abs(scrollBottom) < storyElementHeight / 2) {\r\n// \t\t\t\tchildrenChangeObserver.disconnect();\r\n// \t\t\t\tresolve(stories);\r\n// \t\t\t\treturn;\r\n// \t\t\t}\r\n// \t\t\tscrollEl.scrollBy(0, addedNodes.length * storyElementHeight);\r\n// \t\t});\r\n// \t\tchildrenChangeObserver.observe(storyContainer, { childList: true });\r\n\r\n// \t\t//start at top\r\n// \t\tscrollEl.scrollTop = 0;\r\n// \t\tstories.push(...Array.from(storyContainer.children).map(storyNodeToData));\r\n// \t\tscrollEl.scrollBy(0, scrollDeltaCount * storyElementHeight);\r\n// \t});\r\n// };\r\n","//object for detecting when a certain element has been added, \r\n//like post, preview, story\r\n\r\nimport { \r\n\tInstaElementType,\r\n\tfindMediaElementInPost, \r\n\tgetElementTypesOnCurrentPage,\r\n} from './insta-info-util';\r\n\r\n\r\n\r\ninterface InstaChangeDetector extends EventTarget {\r\n\tstart: () => void,\r\n};\r\nconst instaChangeDetector = new EventTarget() as InstaChangeDetector;\r\n\r\n\r\n\r\nconst getContainedPreviewElements = (element: HTMLElement): HTMLElement[] => {\r\n\treturn (Array.from(element.querySelectorAll('a[href*=\"/p/\"]')) as HTMLLinkElement[])\r\n\t\t.filter(el => el.querySelector(\"img\") != null)\r\n\t\t.map(el => el.parentElement);\r\n};\r\nconst getContainedPostElements = (element: HTMLElement): HTMLElement[] => {\r\n\tif (element.tagName == \"ARTICLE\")  return [element];\r\n\treturn Array.from(element.querySelectorAll(\"article\"));\r\n};\r\nconst getContainedStoryElements = (element: HTMLElement): HTMLElement[] => {\r\n\t//the story element is a <section> with classes _s7gs2  _d9zua (11.04.2018)\r\n\t//it has a header, and an explicit width\r\n\tif (element.tagName == \"SECTION\" && Array.from(element.children).findIndex(el => el.tagName == \"HEADER\") > 0) {\r\n\t\treturn [element];\r\n\t}\r\n\telse {\r\n\t\treturn Array.from(element.querySelectorAll(\"header\")).map(el => el.parentElement);\r\n\t}\r\n};\r\n\r\nclass ObservedElementType {\r\n\tonAdded: (element: HTMLElement) => void = null;\r\n\tonRemoved: (element: HTMLElement) => void = null;\r\n\tgetContainedElements: (parent: HTMLElement) => HTMLElement[] = null;\r\n\telementType: InstaElementType = null;\r\n\r\n\tconstructor(\r\n\t\telementType: InstaElementType, \r\n\t\tgetContainedElements: (parent: HTMLElement) => HTMLElement[], \r\n\t\tonAdded: (element: HTMLElement) => void, \r\n\t\tonRemoved: (element: HTMLElement) => void ){\r\n\t\t\r\n\t\tthis.onAdded = onAdded;\r\n\t\tthis.onRemoved = onRemoved;\r\n\t\tthis.getContainedElements = getContainedElements;\r\n\t\tthis.elementType = elementType;\r\n\t}\r\n\r\n\tmatchesType(elementTypes: InstaElementType[]): boolean {\r\n\t\treturn elementTypes.includes(this.elementType);\r\n\t}\r\n}\r\nconst observedElementTypes = [\r\n\tnew ObservedElementType(\"post\", getContainedPostElements, onPostAdded, onPostRemoved),\r\n\tnew ObservedElementType(\"preview\", getContainedPreviewElements, onPreviewAdded, onPreviewRemoved),\r\n\tnew ObservedElementType(\"story\", getContainedStoryElements, onStoryAdded, onStoryRemoved),\r\n];\r\nfunction invokeListener(name: string, element: HTMLElement){\r\n\tinstaChangeDetector.dispatchEvent(new CustomEvent(name, { detail: { element } }))\r\n}\r\n\r\n//preview ###\r\nfunction onPreviewAdded(previewElement: HTMLElement){\r\n\tinvokeListener(\"onPreviewAdded\", previewElement);\r\n}\r\nfunction onPreviewRemoved(previewElement: HTMLElement){\r\n\tinvokeListener(\"onPreviewRemoved\", previewElement);\r\n}   \r\n\r\n//post ###\r\nfunction onPostAdded(postElement: HTMLElement){\r\n\t// setupPostSrcChangeObserver(postElement);\r\n\tinvokeListener(\"onPostAdded\", postElement);\r\n}\r\nfunction onPostRemoved(postElement: HTMLElement){\r\n\tinvokeListener(\"onPostRemoved\", postElement);\r\n}\r\n\r\n\r\n//post change observation. when a post is opened by clicking a preview element,\r\n//the post-source can change, either when clicking the next or previous button, \r\n//or when it's a collection\r\n\r\n// let postChangeCallbackData = new WeakMap();\r\n// function addOnPostSrcChanged(postElement, callback){\r\n// \treturn;\r\n// \tif (!postChangeCallbackData.has(postElement)){\r\n// \t\tlet mediaElement = findMediaElementInPost(postElement);\r\n// \t\tlet data = {\r\n// \t\t\tcallbacks: [],\r\n// \t\t\tcurrentMediaElement: mediaElement\r\n// \t\t};\r\n// \t\tpostChangeCallbackData.set(postElement, data);\r\n// \t}\r\n// \tpostChangeCallbackData.get(postElement).callbacks.push(callback);\r\n// }\r\n// instaChangeDetector.addOnPostSrcChanged = addOnPostSrcChanged;\r\n// function onPostMutation(mutations){\r\n\t\r\n// \treturn;\r\n// \tlet postData = postChangeCallbackData.get(this);\r\n// \tlet oldMediaElement = postData.currentMediaElement;\r\n// \tlet newMediaElement = findMediaElementInPost(this);\r\n// \tif (newMediaElement.src != oldMediaElement.src){\r\n\r\n// \t\tpostData.callbacks.forEach(callback => callback());\r\n// \t\tpostData.currentMediaElement = newMediaElement;\r\n// \t}\r\n// }\r\n// function setupPostSrcChangeObserver(postElement){\r\n// \t//let observer = new MutationObserver(onPostMutation.bind(postElement));\r\n// \t//observer.observe(postElement, { childList: true, subtree: true });\r\n// }\r\n\r\n\r\n//story ###\r\nfunction onStoryAdded(storyElement: HTMLElement){\r\n\tinvokeListener(\"onStoryAdded\", storyElement);\r\n}\r\nfunction onStoryRemoved(storyElement: HTMLElement){\r\n\tinvokeListener(\"onStoryRemoved\", storyElement);\r\n}\r\n\r\n\r\n\r\n//mutation observer ###\r\n\r\nfunction onNodeExistenceChanged(node: HTMLElement, added: boolean){\r\n\tif (node.nodeType != 1)return;\r\n\r\n\tlet elementTypes = getElementTypesOnCurrentPage();\r\n\tfor (let observer of observedElementTypes){\r\n\t\tif (observer.matchesType(elementTypes)){\r\n\t\t\tlet contained = observer.getContainedElements(node);\r\n\t\t\tlet foreachFunc = added ? observer.onAdded : observer.onRemoved;\r\n\t\t\tcontained.forEach(foreachFunc);\r\n\t\t}\r\n\t}\r\n}\r\nfunction onNodeAdded(addedNode: HTMLElement){\r\n\tonNodeExistenceChanged(addedNode, true);\r\n}\r\nfunction onNodeRemoved(removedNode: HTMLElement){\r\n\tonNodeExistenceChanged(removedNode, false);\r\n}\r\n\r\nfunction onMutation(mutation: MutationRecord){\r\n\tmutation.addedNodes.forEach(onNodeAdded);\r\n\tmutation.removedNodes.forEach(onNodeRemoved);\r\n}\r\n\r\nfunction onMutations(mutationArray: MutationRecord[]){\r\n\tmutationArray.forEach(onMutation);\r\n}\r\n\r\nfunction startObservation(){\r\n\tvar observer = new MutationObserver(onMutations);\r\n\tobserver.observe(document, { childList: true, subtree: true });\r\n}\r\n\r\nfunction initCurrentElements(){\r\n\tonNodeAdded(document.body);\r\n}\r\n\r\n\r\n\r\nfunction start(){\r\n\tinitCurrentElements();\r\n\tstartObservation();\r\n}\r\ninstaChangeDetector.start = start;\r\n\r\nexport default instaChangeDetector;","import { getElementTypesOnCurrentPage } from '../insta-info-util';\n\n\ntype DownloadState = \"initial\" | \"loading\" | \"success\" | \"fail\";\n\nconst iconNames = {\n\tinitial: \"save\",\n\tloading: \"spinner-of-dots\",\n\tsuccess: \"verify-sign-green\",\n\tfail: \"error\"\n};\n\nexport class DownloadFeedbackButton {\n\t\n\t_downloadState: DownloadState = \"initial\";\n\tget downloadState(): DownloadState {\n\t\treturn this._downloadState;\n\t}\n\tset downloadState(val: DownloadState){\n\t\tthis._downloadState = val;\n\t\tthis._onDownloadStateChanged();\n\t}\n\t\n\t_loadingProgress: number = 0;\n\tget loadingProgress(): number {\n\t\treturn this._loadingProgress;\n\t}\n\tset loadingProgress(val: number) {\n\t\tthis._loadingProgress = val;\n\t\tif (this._downloadState === \"loading\"){\n\t\t\tthis._drawSpinner();\n\t\t}\n\t}\n\n\t_spinnerCtx = null;\n\t_spinnerCanvas = null;\n\t_buttonImg = null;\n\t_rootElement = null;\n\n\tconstructor(){\n\t\tthis._rootElement = document.createElement(\"a\");\n\t\tthis._rootElement.classList.add(\"download-button\");\n\t\tObject.assign(this._rootElement.style, {\n\t\t\twidth: \"fit-content\",\n\t\t\theight: \"fit-content\",\n\t\t\tcursor: \"pointer\"\n\t\t});\n\t\tthis._buttonImg = document.createElement(\"img\");\n\t\tObject.assign(this._buttonImg.style, {\n\t\t\twidth: \"inherit\",\n\t\t\theight: \"inherit\"\n\t\t});\n\t\tthis._rootElement.appendChild(this._buttonImg);\n\t\tthis._setInitialState();\n\t}\n\tgetElement(): HTMLElement {\n\t\treturn this._rootElement;\n\t}\n\t_setInitialState(){\n\t\tlet elementType = getElementTypesOnCurrentPage()[0];\n\t\tlet iconAppendix = elementType == \"post\" ? \"dark\" : \"white\";\n\t\tconst iconName = `${iconNames[\"initial\"]}-${iconAppendix}`;\n\t\tthis._buttonImg.src = chrome.extension.getURL(`icons/${iconName}.png`);\n\t}\n\t_onDownloadStateChanged(){\n\t\tconst state = this._downloadState;\n\t\tif (state === \"loading\"){\n\t\t\t//lazily instantiate canvas\n\t\t\tif (!this._spinnerCanvas){\n\t\t\t\tthis._spinnerCanvas = document.createElement(\"canvas\");\n\t\t\t\tthis._spinnerCtx = this._spinnerCanvas.getContext(\"2d\");\n\t\t\t\tthis._drawSpinner();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._spinnerCanvas = null;\n\t\t\tthis._spinnerCtx = null;\n\n\t\t\tlet iconName = iconNames[state];\n\t\t\tif (state === \"initial\") {\n\t\t\t\tlet elementType = getElementTypesOnCurrentPage()[0];\n\t\t\t\tlet iconAppendix = elementType == \"post\" ? \"dark\" : \"white\";\n\t\t\t\ticonName += `-${iconAppendix}`;\n\t\t\t}\n\t\t\tthis._buttonImg.src = chrome.extension.getURL(`icons/${iconName}.png`);\n\t\t}\n\t}\n\t_drawSpinner(){\n\t\tconst ctx = this._spinnerCtx;\n\t\tconst progress = this._loadingProgress;\n\t\tconst squareSize = 32;\n\t\tObject.assign(this._spinnerCanvas, {\n\t\t\twidth: squareSize,\n\t\t\theight: squareSize\n\t\t});\n\t\tctx.clearRect(0, 0, squareSize, squareSize);\n\t\tctx.lineWidth = 4;\n\t\tconst radius = (squareSize - ctx.lineWidth) / 2;\n\t\tctx.strokeStyle = \"cyan\";\n\t\tctx.lineCap = \"round\";\n\t\tctx.beginPath();\n\t\tconst squareSizeHalf = squareSize / 2;\n\t\tconst angleOffset = -Math.PI / 2;\n\t\tctx.arc(squareSizeHalf, squareSizeHalf, radius, angleOffset, angleOffset + progress * 2 * Math.PI);\n\t\tctx.stroke();\n\n\t\tthis._buttonImg.src = this._spinnerCanvas.toDataURL();\n\t}\n};","import { createFileNameByUrl } from \"../../lib/url-to-filename\";\nimport { download as downloadByChrome } from '../disk-writing/chrome-download';\nimport { download as storeOnDisk } from '../disk-writing/disk-download';\nimport { getFolderPath } from \"../disk-writing/lookup-write-path\";\nimport { getOwnUsername } from \"../insta-info-util\";\nimport { DownloadFeedbackButton } from \"./download-feedback-button\";\n\n\nexport interface MediaWriteInfo {\n\tsrc: string,\n\tusername: string\n};\nexport type LoadingCallback = (progress: number) => void;\n\ntype DownloadMethod = \"native\" | \"chrome-background\";\nconst defaultDownloadMethod: DownloadMethod = \"chrome-background\";\n\nconst getDownloadMethod = (): Promise<DownloadMethod> => {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get(\n\t\t\t{ downloadMethod: defaultDownloadMethod },\n\t\t\t(items: { downloadMethod: DownloadMethod }) => {\n\t\t\t\tif (chrome.runtime.lastError){\n\t\t\t\t\treject(chrome.runtime.lastError.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(items.downloadMethod);\n\t\t\t}\n\t\t);\n\t});\n};\n\nconst downloadInBackground = async (mediaInfo: MediaWriteInfo, loadingCallback: LoadingCallback): Promise<void> => {\n\tconst downloadMethod = await getDownloadMethod();\n\tconst mediaSrc = mediaInfo.src;\n\tconst fileName = createFileNameByUrl(mediaSrc);\n\n\tif (downloadMethod === \"native\") {\n\t\tconst ownUserName = getOwnUsername();\n\t\tconst folderPath = await getFolderPath({\n\t\t\tmediaSrc,\n\t\t\tuserName: mediaInfo.username,\n\t\t\townUserName\n\t\t});\n\t\tawait storeOnDisk(\n\t\t\t{\n\t\t\t\tlink: mediaSrc,\n\t\t\t\tfolderPath,\n\t\t\t\tfileName\n\t\t\t},\n\t\t\tloadingCallback\n\t\t);\n\t}\n\telse if (downloadMethod === \"chrome-background\"){\n\t\tawait downloadByChrome({\n\t\t\tfilePath: `Instagram/${mediaInfo.username}/${fileName}`,\n\t\t\turl: mediaSrc\n\t\t}, loadingCallback);\n\t}\n};\n\nexport interface DiskDownloadButtonOptions {\n\tonDownloadStart: () => void,\n\tonDownloadEnd: () => void\n};\nconst downloadFileIndirectly = async (\n\tgetMediaInfo: () => Promise<MediaWriteInfo>,\n\tloadingCallback: LoadingCallback) => {\n\n\tlet mediaInfo: MediaWriteInfo = null;\n\ttry {\n\t\tmediaInfo = await getMediaInfo();\n\t\tawait downloadInBackground(mediaInfo, loadingCallback);\t\t\n\t}\n\tcatch (error) {\n\t\tconsole.error(error);\n\t\tconst message = mediaInfo ? `${error}, \\n user: ${mediaInfo.username}, \\n src: ${mediaInfo.src}` : error;\n\t\tchrome.runtime.sendMessage({\n\t\t\ttype: \"show-notification\",\n\t\t\tnotification: {\n\t\t\t\ttitle: \"download failed\",\n\t\t\t\tmessage,\n\t\t\t\ticonUrl: chrome.extension.getURL(\"icons/insta-loader-icon-48.png\")\n\t\t\t}\n\t\t});\n\n\t\t//throw the error again for caller\n\t\tthrow error;\n\t}\n};\nexport const createDiskDownloadButton = (\n\tgetMediaInfo: () => Promise<MediaWriteInfo>,\n\toptions: Partial<DiskDownloadButtonOptions> = {}): HTMLElement => {\n\n\toptions = {\n\t\tonDownloadStart: () => { },\n\t\tonDownloadEnd: () => { },\n\t\t...options\n\t};\n\n\tconst buttonWrapper = new DownloadFeedbackButton();\n\tconst buttonEl = buttonWrapper.getElement();\n\tconst startDownload = async () => {\n\t\tbuttonWrapper.downloadState = \"loading\";\n\t\tconst updateProgress = (progress: number) => buttonWrapper.loadingProgress = progress;\n\t\toptions.onDownloadStart();\n\t\ttry {\n\t\t\tawait downloadFileIndirectly(getMediaInfo, updateProgress);\n\t\t\tbuttonWrapper.downloadState = \"success\";\n\t\t}\n\t\tcatch (e){\n\t\t\tbuttonWrapper.downloadState = \"fail\";\n\t\t}\n\t\toptions.onDownloadEnd();\n\t};\n\tbuttonEl.addEventListener(\"download-request\", startDownload);\n\tbuttonEl.addEventListener(\"mousedown\", startDownload);\n\treturn buttonEl;\n};","export const createFileNameByUrl = (url: string): string => {\n\tconst endings = [\".mp4\", \".jpg\"];\n\tfor (let ending of endings) {\n\t\tconst index = url.indexOf(ending);\n\t\tif (index >= 0) {\n\t\t\tlet filename = url.substring(0, index + ending.length);\n\t\t\tfilename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n\t\t\treturn filename;\n\t\t}\n\t}\n};","﻿\ninterface FolderPathLookupArgs {\n\tmediaSrc: string,\n\tuserName: string,\n\townUserName: string\n};\n\nconst getFolderPathByItems = (userName: string, ownUserName: string, items: any): string => {\n\tconst directoryRules = items.directoryRules || [];\n\tdirectoryRules.reverse();\n\n\tconst baseDownloadDirectory = items.baseDownloadDirectory || \"\";\n\n\tconst unifiedRules = [\n\t\t...directoryRules,\n\t\t{ baseDirectory: baseDownloadDirectory }\n\t];\n\n\tfor (let rule of unifiedRules) {\n\t\tconst usernamesToMatch = rule.username || [];\n\t\tconst ownUsernamesToMatch = rule.downloadAs || [];\n\t\tconst baseDirectory = rule.baseDirectory || \"\";\n\t\tconst folderPath = rule.folderPath || \"\";\n\t\tconst ruleApplies =\n\t\t\t(usernamesToMatch.length === 0 || usernamesToMatch.includes(userName)) &&\n\t\t\t(ownUsernamesToMatch.length === 0 || ownUsernamesToMatch.includes(ownUserName));\n\t\tif (!ruleApplies) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet writePath = null;\n\t\tif (baseDirectory !== \"\") {\n\t\t\twritePath = `${baseDirectory}/${userName}`;\n\t\t}\n\t\tif (folderPath !== \"\") {\n\t\t\twritePath = folderPath;\n\t\t}\n\t\tif (writePath !== null) {\n\t\t\treturn writePath;\n\t\t}\n\t}\n};\n\nexport const getFolderPath = async (args: FolderPathLookupArgs): Promise<string> => {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get(\n\t\t\t{\n\t\t\t\tbaseDownloadDirectory: \"\",\n\t\t\t\tdirectoryRules: []\n\t\t\t},\n\t\t\t(items) => {\n\t\t\t\tconst path = getFolderPathByItems(args.userName, args.ownUserName, items);\n\t\t\t\tif (!path){\n\t\t\t\t\treject(\"no path found. have you set a path in the extension-options?\")\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(path);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t});\n};","\r\ninterface DiskDownloadArgs {\r\n\tlink: string,\r\n\tfolderPath: string,\r\n\tfileName: string\r\n};\r\n\r\ntype DownloadProgressCallback = (progress: number) => void;\r\n\r\nexport const download = (\r\n\tdata: DiskDownloadArgs, \r\n\tprogressCallback: DownloadProgressCallback): Promise<unknown> => {\r\n\r\n\tconst messageData = {\r\n\t\trequests: [\r\n\t\t\t{\r\n\t\t\t\taction: \"write media by link\",\r\n\t\t\t\tdata\r\n\t\t\t}\r\n\t\t],\r\n\t\ttime: window.performance.now()\r\n\t};\r\n\r\n\tlet _resolve: Function = null; \r\n\tlet _reject: Function = null;\r\n\tconst downloadPromise = new Promise((res, rej) => {\r\n\t\t_resolve = res;\r\n\t\t_reject = rej;\r\n\t});\r\n\r\n\t//long lived connection\r\n\tconst port = chrome.runtime.connect({ \r\n\t\tname: \"disk-downloader\" \r\n\t});\r\n\tport.onMessage.addListener((answer, sender) => {\r\n\t\tif (answer.origin === \"native host disconnect\") {\r\n\t\t\t_reject(answer.data);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (answer.origin === \"native host response\") {\r\n\t\t\tconst resultEntry = answer.data[0];\r\n\t\t\tconst resultEntryType = resultEntry.type;\r\n\t\t\tif (resultEntryType === \"success\") {\r\n\t\t\t\t_resolve();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (resultEntryType === \"error\") {\r\n\t\t\t\t_reject(resultEntry.data);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (resultEntryType === \"progress\"){\r\n\t\t\t\tprogressCallback(resultEntry.data.progress);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst responseType = answer.data[0].type;\r\n\t\tif (responseType === \"success\"){\r\n\t\t\tport.disconnect();\r\n\t\t}\r\n\t});\r\n\tport.postMessage(messageData);\r\n\r\n\treturn downloadPromise;\r\n};\r\n","import { DownloadRequest, DownloadResponse, DownloadErrorResponse, DownloadStateRequest } from \"./chrome-download-types\";\n\ntype ProgressCallback = (progress: number) => void;\n\nexport const download = (\n\tdata: { filePath: string, url: string },\n\tprogressCallback: ProgressCallback): Promise<void> => {\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst port = chrome.runtime.connect({\n\t\t\tname: \"chrome-downloader\"\n\t\t});\n\n\t\tlet downloadId = null;\n\t\tconst requestState = () => {\n\t\t\tport.postMessage({\n\t\t\t\ttype: \"request-state\",\n\t\t\t\tid: downloadId\n\t\t\t} as DownloadStateRequest);\n\t\t};\n\t\tport.onMessage.addListener((answer: DownloadResponse) => {\n\t\t\tif (answer.type === \"download-id\"){\n\t\t\t\tdownloadId = answer.id;\n\t\t\t\trequestState();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"error\"){\n\t\t\t\treject(answer.error);\n\t\t\t\tport.disconnect();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"success\") {\n\t\t\t\tresolve();\n\t\t\t\tport.disconnect();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"progress\"){\n\t\t\t\tprogressCallback(answer.progress.progress);\n\t\t\t\trequestState();\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tport.postMessage({\n\t\t\ttype: \"request-download\",\n\t\t\tfilePath: data.filePath,\n\t\t\turl: data.url\n\t\t} as DownloadRequest);\n\t});\n};","export const createElementByHTML = (html: string): HTMLElement => {\n\tconst wrapper = document.createElement(\"div\") as HTMLDivElement;\n\twrapper.innerHTML = html;\n\treturn wrapper.firstElementChild as HTMLElement;\n};\n\nexport function querySelectorAncestor(query: string, el: HTMLElement): HTMLElement {\n\tlet curParent = el;\n\tfor (let i = 0; i < 1000; i++){\n\t\tif (curParent.matches(query)){\n\t\t\treturn curParent;\n\t\t}\n\t\tcurParent = curParent.parentElement;\n\t}\n\treturn null;\n}","import { MediaWriteInfo, createDiskDownloadButton } from \"../download-buttons/disk-download-button\";\nimport { getPreviewSrcOfPost, getMediaInfoByHtml, createMediaFetcherBySrcElement } from \"../insta-info-util\";\nimport { createElementByHTML } from \"../../lib/html-util\";\n\nconst findInteractionSection = (postElement: HTMLElement): HTMLElement => {\n\treturn postElement.querySelector(\"section\");\n};\nconst findSavePostElement = (postElement: HTMLElement): Element => {\n\tconst section = postElement.querySelector(\"section\");\n\tif (!section) {\n\t\tconsole.warn(\"section with buttons not found\");\n\t\treturn;\n\t}\n\tconst svgs = Array.from(section.querySelectorAll(\"svg\"));\n\treturn svgs[svgs.length - 1];\n};\nconst getPostDownloadElementStyle = (postElement: HTMLElement): Partial<CSSStyleDeclaration> => {\n\tconst saveToCollectionEl = findSavePostElement(postElement);\n\tconst saveToCollectionButton = saveToCollectionEl.parentElement;\n\tconst size = saveToCollectionEl.clientHeight + \"px\";\n\tconst padding = getComputedStyle(saveToCollectionButton).getPropertyValue(\"padding\");\n\treturn {\n\t\twidth: size,\n\t\theight: size,\n\t\tpadding,\n\t};\n};\nconst applyPostDownloadElementStyle = (postElement: HTMLElement, element: HTMLElement) => {\n\tObject.assign(element.style, getPostDownloadElementStyle(postElement));\n};\nconst getMediaSrcOfPostElement = (postElement: HTMLElement): Promise<MediaWriteInfo> => {\n\tlet previewSrc = getPreviewSrcOfPost(postElement);\n\tif (!previewSrc) {\n\t\treturn Promise.reject(\"preview-src not found\");\n\t}\n\tconst data = getMediaInfoByHtml(postElement);\n\treturn Promise.resolve(data);\n};\nexport const injectDownloadButtonsIntoPost = (postElement: HTMLElement) => {\n\tconst sectionEl = findInteractionSection(postElement);\n\n\tconst bar = createElementByHTML(`\n\t\t<div \n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex; \n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 8px;\n\t\t\t\tpadding-right: 0px;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\"\n\t\t></div>\n\t`);\n\t// const getMediaSrc = () => getMediaSrcOfPostElement(postElement);\n\tconst getMediaSrc = createMediaFetcherBySrcElement(postElement);\n\tconst downloadButton = createDiskDownloadButton(getMediaSrc);\n\tapplyPostDownloadElementStyle(postElement, downloadButton);\n\tbar.appendChild(downloadButton);\n\n\tsectionEl.insertAdjacentElement(\"beforeend\", bar);\n};","import { MediaWriteInfo, createDiskDownloadButton } from \"../download-buttons/disk-download-button\";\nimport { fetchMediaInfo } from \"../insta-info-util\";\nimport { createElementByHTML } from \"../../lib/html-util\";\n\nconst getMediaSrcOfPreviewElement = async (previewEl: HTMLElement): Promise<MediaWriteInfo> => {\n\tconst linkElement = previewEl.querySelector(\"a\");\n\tif (linkElement === null) {\n\t\tthrow \"link-element not found\";\n\t}\n\tlet postHref = linkElement.href;\n\n\tconst data = await fetchMediaInfo(postHref);\n\tlet src = data.mediaArray[0].src;\n\tlet username = data.username;\n\treturn { username, src };\n};\nexport const injectDownloadButtonsIntoPreview = (previewEl: HTMLElement) => {\n\tconst previewOverlay = createElementByHTML(`\n\t\t<div style=\"\n\t\t\t\twidth: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0px;\n\t\t\t\tbottom: 0px;\n\t\t\t\tflex-direction: row;\"\n\t\t>\n\t\t</div>\n\t`);\n\tconst getMediaSrc = () => getMediaSrcOfPreviewElement(previewEl);\n\tconst diskDownloadButton = createDiskDownloadButton(getMediaSrc);\n\tObject.assign(diskDownloadButton.style, {\n\t\twidth: \"24px\",\n\t\theight: \"24px\",\n\t\tpadding: \"5px\"\n\t});\n\tpreviewOverlay.appendChild(diskDownloadButton);\n\n\tpreviewEl.appendChild(previewOverlay);\n};","import { findCurrentPost } from \"./insta-info-util\";\n\nexport const downloadKey = \"Enter\";\n\nexport function requestDownloadByButton(downloadButton: HTMLElement){\n\tdownloadButton.dispatchEvent(new CustomEvent(\"download-request\"));\n}\n\nfunction findDownloadButton(postEl: HTMLElement): HTMLElement {\n\treturn postEl.querySelector(\".download-button\");\n}\nfunction downloadCurrentPostMedia(){\n\tconst curPost = findCurrentPost();\n\tif (!curPost){\n\t\tconsole.warn(\"could not find current post\");\n\t\treturn;\n\t}\n\tconst downloadButton = findDownloadButton(curPost);\n\tif (!downloadButton) {\n\t\tconsole.warn(\"could not find download-button\");\n\t\treturn;\n\t}\n\trequestDownloadByButton(downloadButton);\n}\n\ndocument.addEventListener(\"keydown\", e => {\n\tif (e.key === downloadKey){\n\t\tdownloadCurrentPostMedia();\n\t}\n})","import { createElementByHTML, querySelectorAncestor } from \"../../lib/html-util\";\nimport { createDiskDownloadButton, DiskDownloadButtonOptions, MediaWriteInfo } from \"../download-buttons/disk-download-button\";\nimport { downloadKey, requestDownloadByButton } from \"../download-shortcut\";\nimport { getSrcOfStory, getUsernameOfStory } from \"../insta-info-util\";\n\n\nconst findCloseStoryElement = (storyEl: HTMLElement): HTMLElement => {\n\treturn storyEl.querySelector(\".coreSpriteCloseLight\").children[0] as HTMLElement;\n};\nconst getMediaSrcOfStoryElement = (storyEl: HTMLElement): Promise<MediaWriteInfo> => {\n\ttry {\n\t\tconst src = getSrcOfStory(storyEl);\n\t\tconst username = getUsernameOfStory();\n\t\treturn Promise.resolve({ src, username });\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n};\nconst getStoryDownloadElementStyle = (storyEl: HTMLElement): Partial<CSSStyleDeclaration> => {\n\tconst closeSprite = findCloseStoryElement(storyEl);\n\tconst size = closeSprite.clientHeight + \"px\";\n\tconst blueprintEl = closeSprite.parentElement.parentElement;\n\tconst margin = getComputedStyle(blueprintEl).getPropertyValue(\"margin\");\n\treturn {\n\t\twidth: size,\n\t\theight: size,\n\t\tmargin\n\t};\n};\n\ninterface StoryPauseHandle {\n\tkeepPaused: () => void,\n\tcontinue: () => void\n};\nconst createStoryPauseHandle = (): StoryPauseHandle => {\n\tlet _storyPaused = false;\n\tconst video = document.querySelector(\"video\");\n\tconst keepStoryPaused = () => {\n\t\t_storyPaused = true;\n\t\tconst loop = () => {\n\t\t\tif (!video.paused) {\n\t\t\t\tvideo.pause();\n\t\t\t}\n\t\t\tif (!_storyPaused) return;\n\t\t\twindow.requestAnimationFrame(loop);\n\t\t};\n\t\tloop();\n\t};\n\tconst continueStory = () => {\n\t\t_storyPaused = false;\n\t};\n\treturn {\n\t\tkeepPaused: keepStoryPaused,\n\t\tcontinue: continueStory\n\t}\n};\n\nfunction findSvgPauseOrPlayButton(){\n\treturn document.querySelector(\"header svg\") as HTMLElement;\n}\n\nfunction findStoryPlayButton(){\n\tconst svgButton = findSvgPauseOrPlayButton();\n\tif (!svgButton){\n\t\tconsole.warn(\"could not add download-button in story. the svg for the pause/play button could not be found\");\n\t\treturn;\n\t}\n\tconst playButton = querySelectorAncestor(\"button\", svgButton);\n\tif (!playButton) {\n\t\tconsole.warn(\"could not add download-button in story. the svg for the pause/play button has not button as an ancestor\");\n\t\treturn;\n\t}\n\treturn playButton;\n}\n\nexport const injectDownloadButtonsIntoStory = (storyEl: HTMLElement) => {\n\tconst container = createElementByHTML(`\n\t\t<div style=\"margin-right: 20px;\"></div>\n\t`);\n\n\tconst pauseHandleDownloadOptions = ((): DiskDownloadButtonOptions => {\n\t\tlet pauseHandle: StoryPauseHandle = null;\n\t\treturn {\n\t\t\tonDownloadStart: () => {\n\t\t\t\tif (document.querySelector(\"video\")){\n\t\t\t\t\tpauseHandle = createStoryPauseHandle();\n\t\t\t\t\tpauseHandle.keepPaused();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDownloadEnd: () => {\n\t\t\t\tif (!pauseHandle) return;\n\t\t\t\tpauseHandle.continue();\n\t\t\t}\n\t\t};\n\t})();\n\tconst diskDownloadButton = createDiskDownloadButton(\n\t\t() => getMediaSrcOfStoryElement(storyEl),\n\t\tpauseHandleDownloadOptions\n\t);\n\t// Object.assign(diskDownloadButton.style, getStoryDownloadElementStyle(storyEl));\n\tcontainer.appendChild(diskDownloadButton);\n\t\n\tconst playButton = findStoryPlayButton();\n\tconst buttonContainer = playButton.parentElement;\n\tbuttonContainer.insertAdjacentElement(\"afterbegin\", container);\n\n\tdocument.addEventListener(\"keypress\", e => {\n\t\tif (e.key === downloadKey){\n\t\t\trequestDownloadByButton(diskDownloadButton);\n\t\t}\n\t});\n};","\r\nimport instaChangeDetector from '../insta-change-detection';\r\nimport { injectDownloadButtonsIntoPost } from './post-extension';\r\nimport { injectDownloadButtonsIntoPreview } from './preview-extension';\r\nimport { injectDownloadButtonsIntoStory } from './story-extension';\r\n\r\n\r\ninstaChangeDetector.addEventListener(\"onPostAdded\", e => {\r\n\tinjectDownloadButtonsIntoPost((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.addEventListener(\"onPreviewAdded\", e => {\r\n\tinjectDownloadButtonsIntoPreview((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.addEventListener(\"onStoryAdded\", e => {\r\n\tinjectDownloadButtonsIntoStory((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.start();\r\n","﻿import { findMainFeedPosts } from \"./insta-info-util\";\n\nconst scrollTolerance = 30;\n\nfunction calculateWindowBottomToDownloadBottomDifference(postEl: HTMLElement): number {\n\tconst downloadButtonContainer = postEl.querySelector(\"section\");\n\tconst downloadButtonBottom = downloadButtonContainer.getBoundingClientRect().bottom;\n\tconst windowBottom = window.innerHeight;\n\treturn windowBottom - downloadButtonBottom;\n}\n\nfunction isNextPost(postEl: HTMLElement, index: number): boolean {\n\treturn calculateWindowBottomToDownloadBottomDifference(postEl) < -scrollTolerance\n}\nfunction isPrevPost(postEl: HTMLElement, index: number): boolean {\n\treturn calculateWindowBottomToDownloadBottomDifference(postEl) > scrollTolerance\n}\n\nfunction findNextPost(): HTMLElement {\n\treturn findMainFeedPosts().find(isNextPost)\n}\nfunction findPrevPost(): HTMLElement {\n\treturn findMainFeedPosts().reverse().find(isPrevPost)\n}\n\nfunction scrollToPost(findFunc: () => HTMLElement){\n\tconst postEl = findFunc();\n\tif (!postEl){\n\t\tconsole.warn(\"could not find post to scroll to\");\n\t\treturn;\n\t}\n\tconst scrollDelta = -calculateWindowBottomToDownloadBottomDifference(postEl);\n\tconst targetScrollTop = window.scrollY + scrollDelta;\n\twindow.scrollTo({\n\t\tleft: window.scrollX,\n\t\ttop: targetScrollTop,\n\t\tbehavior: \"smooth\"\n\t});\n}\n\nconst upButton = \"w\";\nconst downKey = \"s\";\n\ndocument.addEventListener(\"keydown\", e => {\n\tif (e.key === upButton){\n\t\tscrollToPost(findPrevPost);\n\t}\n\telse if (e.key === downKey){\n\t\tscrollToPost(findNextPost);\n\t}\n});","import { findCurrentPost, findStoryElement } from \"./insta-info-util\";\nimport { getCurrentPageType } from \"./insta-navigation-observer\";\n\n\ntype NavigationDirection = \"left\" | \"right\";\nconst keyToDirection = {\n\t\"a\": \"left\", \"d\": \"right\"\n};\nconst directionToNaviButtonClass = {\n\t\"left\": \"LeftChevron\",\n\t\"right\": \"RightChevron\"\n};\n\nfunction navigate(direction: NavigationDirection){\n\tconst pageType = getCurrentPageType();\n\tconsole.log(pageType);\n\tconst parentElement = pageType === \"stories\" ? document.body : findCurrentPost();\n\tif (!parentElement){\n\t\tconsole.warn(\"could not find current-element\");\n\t\treturn;\n\t}\n\tconst naviClass = directionToNaviButtonClass[direction];\n\tconst naviEl1 = parentElement.querySelector(`[class*=\"${naviClass}\"]`);\n\tif (!naviEl1){\n\t\tconsole.warn(\"could not find navigation-element\");\n\t\treturn;\n\t}\n\tconst naviButton = naviEl1.parentElement;\n\tnaviButton.click();\n}\n\ndocument.addEventListener(\"keydown\", e => {\n\tconst direction = keyToDirection[e.key];\n\tif (!direction) return;\n\tnavigate(direction);\n});"],"names":["$aaa92c6ccde49974988b37009725d410$export$pageType","$aaa92c6ccde49974988b37009725d410$export$getCurrentPageType","href","window","location","endsWith","includes","$aaa92c6ccde49974988b37009725d410$var$onNavigation","$aaa92c6ccde49974988b37009725d410$var$currentHref","$aaa92c6ccde49974988b37009725d410$var$currentPageType","$aaa92c6ccde49974988b37009725d410$var$reactRoot","document","querySelector","MutationObserver","newHref","oldHref","oldPageType","data","naviData","newPageType","forEach","callback","observe","childList","subtree","$7f87f4953fd455760bf224aa3386662e$export$getElementTypesOnCurrentPage","curPageType","$7f87f4953fd455760bf224aa3386662e$var$parseSingleQualityAndSrc","entry","splitted","split","src","quality","parseInt","$7f87f4953fd455760bf224aa3386662e$export$getHighestQualityFromSrcset","srcset","qualityAndSources","map","$7f87f4953fd455760bf224aa3386662e$var$parseAllQualityAndSrc","maxQualIndex","i","length","$7f87f4953fd455760bf224aa3386662e$var$getHighestQualityFromSrcsetArray","srcsetArray","maxWidthIndex","maxWidth","config_width","curWidth","$7f87f4953fd455760bf224aa3386662e$var$queryVideoOrImg","parent","videoOrImgWithSrcSet","Array","from","querySelectorAll","find","img","offsetHeight","$7f87f4953fd455760bf224aa3386662e$var$queryLargestImage","$7f87f4953fd455760bf224aa3386662e$export$fetchMediaInfo","url","Promise","resolve","reject","request","XMLHttpRequest","addEventListener","responseText","dataText","exec","dataObject","JSON","parse","graphql","shortcode_media","postInfo","username","owner","postType","subMedia","undefined","edge_sidecar_to_children","edges","el","node","video_url","mediaArray","a","subMed","subObj","previewSrc","display_url","Object","assign","type","display_resources","highQualitySrc","push","$7f87f4953fd455760bf224aa3386662e$var$getMediaInfoFromResponseText","this","e","open","send","$7f87f4953fd455760bf224aa3386662e$export$findMainFeedPosts","parentElement","children","$7f87f4953fd455760bf224aa3386662e$export$findMediaElementInPost","postElement","$7f87f4953fd455760bf224aa3386662e$var$findTypeOfPost","mediaElement","console","warn","log","innerHTML","tagName","$7f87f4953fd455760bf224aa3386662e$var$getCurrentCollectionIndexByList","list","firstItem","listItemWidth","parseFloat","getComputedStyle","getPropertyValue","visibleX","getBoundingClientRect","x","curItemX","Math","abs","$7f87f4953fd455760bf224aa3386662e$var$findMediaEntryByCollection","collectionElement","postEl","listIndex","$7f87f4953fd455760bf224aa3386662e$var$getCurrentCollectionElement","matches","videoEl","poster","trimmedPoster","mediaIndex","findIndex","val","$7f87f4953fd455760bf224aa3386662e$var$findMediaEntryByVideo","imgEl","highQualiSrc","$7f87f4953fd455760bf224aa3386662e$var$findMediaEntryByImage","$7f87f4953fd455760bf224aa3386662e$export$findCurrentPost","reduce","acc","dist","rect","centerY","top","bottom","innerHeight","$7f87f4953fd455760bf224aa3386662e$var$calculatePostDistanceToViewport","Infinity","$7f87f4953fd455760bf224aa3386662e$export$getUsernameOfStory","startsWith","metaEl","usernameMatch","content","match","$7f87f4953fd455760bf224aa3386662e$var$findUsernameOnProfilePage","$7f87f4953fd455760bf224aa3386662e$export$getUsernameByStoryUrl","storyUrl","$51139633877384cccec01a8a4cdfe669$export$default","EventTarget","$51139633877384cccec01a8a4cdfe669$var$ObservedElementType","constructor","elementType","getContainedElements","onAdded","onRemoved","matchesType","elementTypes","$51139633877384cccec01a8a4cdfe669$var$observedElementTypes","element","$51139633877384cccec01a8a4cdfe669$var$invokeListener","$51139633877384cccec01a8a4cdfe669$var$onPostRemoved","filter","previewElement","$51139633877384cccec01a8a4cdfe669$var$onPreviewRemoved","storyElement","name","dispatchEvent","CustomEvent","detail","$51139633877384cccec01a8a4cdfe669$var$onNodeExistenceChanged","added","nodeType","observer","contained","foreachFunc","$51139633877384cccec01a8a4cdfe669$var$onNodeAdded","addedNode","$51139633877384cccec01a8a4cdfe669$var$onNodeRemoved","removedNode","$51139633877384cccec01a8a4cdfe669$var$onMutation","mutation","addedNodes","removedNodes","$51139633877384cccec01a8a4cdfe669$var$onMutations","mutationArray","start","body","$73dc19a524ed96565fd900d4a55e881b$var$iconNames","initial","loading","success","fail","$73dc19a524ed96565fd900d4a55e881b$export$DownloadFeedbackButton","_downloadState","_onDownloadStateChanged","_loadingProgress","_drawSpinner","_rootElement","createElement","classList","add","style","width","height","cursor","_buttonImg","appendChild","_setInitialState","getElement","iconName","chrome","extension","getURL","state","_spinnerCanvas","_spinnerCtx","getContext","ctx","progress","squareSize","clearRect","lineWidth","radius","strokeStyle","lineCap","beginPath","angleOffset","PI","arc","stroke","toDataURL","$b49adaa5c6f0552d1e84ff68dd2f4087$var$downloadInBackground","async","mediaInfo","loadingCallback","downloadMethod","storage","sync","get","items","runtime","lastError","message","mediaSrc","fileName","endings","ending","index","indexOf","filename","substring","lastIndexOf","ownUserName","folderPath","baseDownloadDirectory","directoryRules","path","userName","reverse","unifiedRules","baseDirectory","rule","usernamesToMatch","ownUsernamesToMatch","downloadAs","writePath","$cc86669de3f893fa1fab9f531269c84e$var$getFolderPathByItems","args","$cc86669de3f893fa1fab9f531269c84e$export$getFolderPath","progressCallback","messageData","requests","action","time","performance","now","_resolve","_reject","downloadPromise","res","rej","port","connect","onMessage","addListener","answer","sender","origin","resultEntry","resultEntryType","disconnect","postMessage","$8209ffa236325bb0df626df5cdacc2b8$export$download","link","filePath","downloadId","requestState","id","error","$b49adaa5c6f0552d1e84ff68dd2f4087$export$createDiskDownloadButton","getMediaInfo","options","onDownloadStart","onDownloadEnd","buttonWrapper","buttonEl","startDownload","downloadState","updateProgress","loadingProgress","sendMessage","notification","title","iconUrl","$b49adaa5c6f0552d1e84ff68dd2f4087$var$downloadFileIndirectly","$c6d025ba3ac1b355c3934a7b9a3b6939$export$createElementByHTML","html","wrapper","firstElementChild","$84ada1f1e8e40fd6679b3752a1168334$var$getPostDownloadElementStyle","saveToCollectionEl","section","svgs","$84ada1f1e8e40fd6679b3752a1168334$var$findSavePostElement","saveToCollectionButton","size","clientHeight","padding","$84ada1f1e8e40fd6679b3752a1168334$export$injectDownloadButtonsIntoPost","sectionEl","$84ada1f1e8e40fd6679b3752a1168334$var$findInteractionSection","bar","getMediaSrc","currentMediaInfo","currentPostType","postHref","linkElements","startIndex","endIndex","$7f87f4953fd455760bf224aa3386662e$export$getHrefOfPost","videoOrImgInfo","downloadButton","$84ada1f1e8e40fd6679b3752a1168334$var$applyPostDownloadElementStyle","insertAdjacentElement","$6b6f4b489b4612cb0e7955e1289c94b0$export$injectDownloadButtonsIntoPreview","previewEl","previewOverlay","diskDownloadButton","linkElement","$6b6f4b489b4612cb0e7955e1289c94b0$var$getMediaSrcOfPreviewElement","$59258173f783c84352142a002865e7e2$export$downloadKey","$59258173f783c84352142a002865e7e2$export$requestDownloadByButton","key","curPost","$59258173f783c84352142a002865e7e2$var$downloadCurrentPostMedia","$ca3827e813d18d05f16fd4228b0487b8$var$getMediaSrcOfStoryElement","storyEl","video","sources","codecOrder","getOrderOfCodec","codec","sourceSortFunc","b","sort","$ca3827e813d18d05f16fd4228b0487b8$var$findStoryPlayButton","svgButton","playButton","query","curParent","$ca3827e813d18d05f16fd4228b0487b8$export$injectDownloadButtonsIntoStory","container","pauseHandleDownloadOptions","pauseHandle","_storyPaused","keepPaused","loop","paused","pause","requestAnimationFrame","continue","$ca3827e813d18d05f16fd4228b0487b8$var$createStoryPauseHandle","$6da573f0a87c0e666ad2a7f6762955e3$var$calculateWindowBottomToDownloadBottomDifference","downloadButtonBottom","$6da573f0a87c0e666ad2a7f6762955e3$var$isNextPost","$6da573f0a87c0e666ad2a7f6762955e3$var$isPrevPost","$6da573f0a87c0e666ad2a7f6762955e3$var$findNextPost","$6da573f0a87c0e666ad2a7f6762955e3$var$findPrevPost","$6da573f0a87c0e666ad2a7f6762955e3$var$scrollToPost","findFunc","scrollDelta","targetScrollTop","scrollY","scrollTo","left","scrollX","behavior","$2593b66f163b4734a8bbb2b1fd9386d9$var$keyToDirection","d","$2593b66f163b4734a8bbb2b1fd9386d9$var$directionToNaviButtonClass","right","direction","pageType","naviClass","naviEl1","click","$2593b66f163b4734a8bbb2b1fd9386d9$var$navigate"],"version":3,"file":"index.js.map"}