{"version":3,"sources":["insta-navigation-observer.ts","insta-info-util.ts","insta-change-detection.ts","../lib/url-to-filename.ts","disk-writing/chrome-download.ts","disk-writing/disk-download.ts","disk-writing/lookup-write-path.ts","download-buttons/download-feedback-button.ts","download-buttons/disk-download-button.ts","../lib/html-util.ts","download-extension/post-extension.ts","download-extension/preview-extension.ts","download-shortcut.ts","download-extension/story-extension.ts","download-extension/combined-download-extension.ts","post-scroll-navigation.ts","horizontal-navigation.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../app/src","sourcesContent":["\n\ntype InstaPageType = \"mainFeed\" | \"post\" | \"personFeed\" | \"stories\";\n\n//missing:\n//tagFeed\n//savedFeed\nexport const pageType: { [key: string]: InstaPageType } = {\n\tmainFeed: \"mainFeed\",\n\tpost: \"post\",\n\tpersonFeed: \"personFeed\",\n\tstories: \"stories\"\n};\nexport const getCurrentPageType = (): InstaPageType => {\n\tlet href = window.location.href;\n\tif (href.endsWith(\"instagram.com/\") || href.includes(\".com/?\")) {\n\t\treturn pageType.mainFeed;\n\t}\n\telse if (href.includes(\"/p/\")) {\n\t\treturn pageType.post;\n\t}\n\telse if (href.includes(\"/stories/\")) {\n\t\treturn pageType.stories;\n\t}\n\telse {\n\t\treturn pageType.personFeed;\n\t}\n};\n\ninterface InstaNavigationChangeData {\n\toldHref: string,\n\tnewHref: string,\n\toldPageType: InstaPageType,\n\tnewPageType: InstaPageType\n};\ntype InstaNavigationCallback = (data: InstaNavigationChangeData) => void;\n\nconst onNavigation: InstaNavigationCallback[] = [];\nexport const subscribeToNavigation = (callback: InstaNavigationCallback) => {\n\tonNavigation.push(callback);\n};\nconst invokeViewModeChangeListener = (data: InstaNavigationChangeData) => {\n\tonNavigation.forEach(callback => callback(data));\n};\n\n//main feed || stories || other\nlet currentHref: string = window.location.href;\nlet currentPageType: InstaPageType = getCurrentPageType();\nconst reactRoot: Element = document.querySelector(\"#react-root\");\nconst onRootMutation = () => {\n\tconst newHref = window.location.href;\n\tif (newHref === currentHref) {\n\t\treturn;\n\t}\n\tconst oldHref = currentHref;\n\tconst oldPageType = currentPageType;\n\tcurrentHref = newHref;\n\tcurrentPageType = getCurrentPageType();\n\tconst naviData: InstaNavigationChangeData = {\n\t\toldHref, newHref,\n\t\toldPageType, \n\t\tnewPageType: currentPageType\n\t};\n\tinvokeViewModeChangeListener(naviData);\n};\n(new MutationObserver(onRootMutation)).observe(reactRoot, { childList: true, subtree: true })","import { getCurrentPageType } from './insta-navigation-observer';\r\n\r\nexport type InstaElementType = \"preview\" | \"post\" | \"story\";\r\n\r\nexport type VideoOrImageElement = HTMLVideoElement | HTMLImageElement;\r\n\r\nexport const getElementTypesOnCurrentPage = (): InstaElementType[] => {\r\n\tconst curPageType = getCurrentPageType();\r\n\tif (curPageType === \"mainFeed\" || curPageType === \"post\"){\r\n\t\treturn [\"post\"];\r\n\t}\r\n\telse if (curPageType === \"personFeed\"){\r\n\t\treturn [\"preview\"];\r\n\t}\r\n\telse if (curPageType === \"stories\") {\r\n\t\treturn [\"story\"];\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getHighestQualityFromSrcset = (srcset: string): string => {\r\n\tconst split = srcset.split(\",\");\r\n\tlet highestQualiString = split[split.length - 1];\r\n\tconst endIndex = highestQualiString.indexOf(\" \") + 1;\r\n\thighestQualiString = highestQualiString.substring(0, endIndex);\r\n\treturn highestQualiString.trim();\r\n};\r\n\r\ninterface SrcSetEntry {\r\n\tsrc: string,\r\n\tconfig_width: number,\r\n\tconfig_height: number\r\n};\r\nconst getHighestQualityFromSrcsetArray = (srcsetArray: SrcSetEntry[]): string => {\r\n\tlet maxWidthIndex = 0;\r\n\tlet maxWidth = srcsetArray[0].config_width;\r\n\tfor (let i = 1; i < srcsetArray.length; i++){\r\n\t\tconst curWidth = srcsetArray[i].config_width;\r\n\t\tif (curWidth > maxWidth){\r\n\t\t\tmaxWidthIndex = i;\r\n\t\t\tmaxWidth = curWidth;\r\n\t\t}\r\n\t}\r\n\treturn srcsetArray[maxWidthIndex].src;\r\n};\r\n\r\nexport const getOwnUsername = (): string => {\r\n\treturn /(?<=\"username\":\")[^\"]*/.exec(document.body.innerHTML)[0];\r\n};\r\n\r\nconst queryVideoOrImg = (parent: HTMLElement) => parent.querySelector(\"video, img[srcset]\") as VideoOrImageElement;\r\n\r\n\r\n//fetching ###\r\n\r\nexport interface VideoInfo {\r\n\ttype: \"video\",\r\n\tsrc: string,\r\n\tpreviewSrc: string\r\n};\r\nexport interface ImgInfo {\r\n\ttype: \"image\", \r\n\tsrcset: SrcSetEntry[],\r\n\tsrc: string,\r\n\tpreviewSrc: string\r\n};\r\nexport type VideoOrImgInfo = VideoInfo | ImgInfo;\r\ntype PostType = \"collection\" | \"video\" | \"image\";\r\nexport interface MediaInfo {\r\n\tusername: string,\r\n\tpostType: PostType,\r\n\tmediaArray: VideoOrImgInfo[]\r\n}\r\nexport interface SingleMediaInfo { \r\n\tusername: string, \r\n\tsrc: string, \r\n\ttype: \"video\" | \"image\"\r\n}\r\n\r\nconst getMediaInfoFromResponseText = (responseText: string): MediaInfo => {\r\n\tconst dataText = /(?<=window\\.__additionalDataLoaded\\(.*',).*(?=\\);<)/.exec(responseText);\r\n\tif (!dataText) throw '__additionalDataLoaded not found on window';\r\n\r\n\tconst dataObject = JSON.parse(dataText[0]);\r\n\r\n\tif (!dataObject.graphql) throw 'graphql not found';\r\n\tif (!dataObject.graphql.shortcode_media) throw 'shortcode_media not found';\r\n\r\n\tconst postInfo = dataObject.graphql.shortcode_media;\r\n\tconst username: string = postInfo.owner.username;\r\n\t\r\n\tconst [postType, subMedia] = postInfo.edge_sidecar_to_children !== undefined ? \r\n\t\t[ \"collection\", (postInfo.edge_sidecar_to_children.edges).map(el => el.node) ] : \r\n\t\t[ postInfo.video_url !== undefined ? \"video\" : \"image\", [postInfo] ];\r\n\r\n\tconst mediaArray: VideoOrImgInfo[] = [];\r\n\tfor (let a = 0; a < subMedia.length; a++) {\r\n\t\tlet subMed = subMedia[a];\r\n\t\tlet subObj: Partial<VideoOrImgInfo> = {\r\n\t\t\tpreviewSrc: subMed.display_url\r\n\t\t};\r\n\r\n\t\tif (subMed.video_url !== undefined) {\r\n\t\t\tObject.assign(subObj, {\r\n\t\t\t\ttype: \"video\",\r\n\t\t\t\tsrc: subMed.video_url\r\n\t\t\t} as Partial<VideoInfo>)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst srcset = subMed.display_resources as SrcSetEntry[];\r\n\t\t\tconst highQualitySrc = getHighestQualityFromSrcsetArray(srcset);\r\n\t\t\tObject.assign(subObj, {\r\n\t\t\t\ttype: \"image\",\r\n\t\t\t\tsrcset, \r\n\t\t\t\tsrc: highQualitySrc\r\n\t\t\t} as Partial<ImgInfo>)\r\n\t\t}\r\n\r\n\t\tmediaArray.push(subObj as VideoOrImgInfo);\r\n\t}\r\n\r\n\tif (mediaArray.length === 0) {\r\n\t\tthrow 'no media found';\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tpostType,\r\n\t\tmediaArray,\r\n\t\tusername\r\n\t} as MediaInfo;\r\n};\r\nexport const fetchMediaInfo = (url: string): Promise<MediaInfo> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst request = new XMLHttpRequest();\r\n\t\r\n\t\tfunction transferComplete(){\r\n\t\t\ttry {\r\n\t\t\t\tconst data = getMediaInfoFromResponseText(this.responseText);\r\n\t\t\t\tresolve(data);\r\n\t\t\t}\r\n\t\t\tcatch (e){\r\n\t\t\t\treject(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\trequest.addEventListener(\"load\", transferComplete);\r\n\t\trequest.addEventListener(\"error\", reject);\r\n\t\trequest.addEventListener(\"abort\", reject);\r\n\t\r\n\t\trequest.open(\"GET\", url);\r\n\t\trequest.send();\r\n\t});\r\n};\r\n\r\n\r\n//main-feed ###\r\n\r\nexport function findMainFeedPostsContainer(): HTMLDivElement {\r\n\treturn document.querySelector(\"article\").parentElement as HTMLDivElement\r\n}\r\nexport function findMainFeedPosts(): HTMLElement[] {\r\n\treturn Array.from(findMainFeedPostsContainer().children) as HTMLElement[]\r\n}\r\n\r\n\r\n//post ###\r\n\r\nexport const getPreviewSrcOfPost = (postElement: HTMLElement): string => {\r\n\tconst queries = [\"video[poster]\", \"img[srcset]\"];\r\n\tconst previewAttr = [\"poster\", \"src\"];\r\n\tfor (let a = 0; a < previewAttr.length; a++){\r\n\t\tconst found = postElement.querySelector(queries[a]);\r\n\t\tif (found !== null){\r\n\t\t\tconst previewSrc = found.getAttribute(previewAttr[a]);\r\n\t\t\treturn previewSrc;\r\n\t\t}\r\n\t}\r\n};\r\nexport const getHrefOfPost = (postElement: HTMLElement): string => {\r\n\tconst linkElements = postElement.querySelectorAll('a[href*=\"/p/\"') as NodeListOf<HTMLLinkElement>;\r\n\tconst href = linkElements[linkElements.length - 1].href;\r\n\tconst startIndex = href.indexOf(\"/p/\") + 3;\r\n\tconst endIndex = href.indexOf(\"/\", startIndex);\r\n\treturn href.substring(0, endIndex + 1);\r\n};\r\nexport const findMediaElementInPost = (postElement: HTMLElement): VideoOrImageElement => {\r\n\treturn queryVideoOrImg(postElement);\r\n};\r\nconst findUsernameInPost = (postElement: HTMLElement): string => {\r\n\tconst profileLink = (postElement.querySelector(\"header a\") as HTMLLinkElement).href;\r\n\treturn /(?<=\\.com\\/).*(?=\\/)/.exec(profileLink)[0];\r\n};\r\nconst findTypeOfPost = (postElement: HTMLElement): PostType => {\r\n\t// if (postElement.querySelector(\"ul img[srcset], ul video\") !== null) return \"collection\";\r\n\tif (postElement.querySelector('[class*=\"Chevron\"]')) return \"collection\";\r\n\tconst mediaElement = findMediaElementInPost(postElement);\r\n\tif (!mediaElement){\r\n\t\tconsole.warn(\"no media-element found\");\r\n\t\tconsole.log(postElement.innerHTML);\r\n\t}\r\n\treturn mediaElement.tagName === \"VIDEO\" ? \"video\" : \"image\";\r\n};\r\nconst extractMediaFromElement = (mediaElement: VideoOrImageElement): Omit<SingleMediaInfo, \"username\"> => {\r\n\tconst type = mediaElement.tagName === \"VIDEO\" ? \"video\" : \"image\";\r\n\tconst src = type === \"video\" ? mediaElement.src : getHighestQualityFromSrcset((mediaElement as HTMLImageElement).srcset);\r\n\treturn { type, src };\r\n};\r\nfunction getCurrentCollectionIndex(postEl: HTMLElement): number {\r\n\tconst list = postEl.querySelector(\"ul\");\r\n\t//the actual first item at index 0 is some kind of marker with width 1\r\n\tconst firstItem = list.children[1];\r\n\tconst listItemWidth = parseFloat(getComputedStyle(firstItem).getPropertyValue(\"width\"));\r\n\tconst positionReferenceElement = list.parentElement.parentElement;\r\n\tconst visibleX = positionReferenceElement.getBoundingClientRect().x;\r\n\t\r\n\tfor (let i = 1; i < list.children.length; i++) {\r\n\t\tconst listItem = list.children[i];\r\n\t\tconst curItemX = listItem.getBoundingClientRect().x;\r\n\t\tif (Math.abs(visibleX - curItemX) < listItemWidth / 2) {\r\n\t\t\treturn i - 1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\nconst getCollectionMediaByPostElement = (postElement: HTMLElement) => {\r\n\tconst list = postElement.querySelector(\"ul\");\r\n\t//the actual first item at index 0 is some kind of marker with width 1\r\n\tconst firstItem = list.children[1];\r\n\tconst listItemWidth = parseFloat(getComputedStyle(firstItem).getPropertyValue(\"width\"));\r\n\tconst positionReferenceElement = list.parentElement.parentElement;\r\n\tconst visibleX = positionReferenceElement.getBoundingClientRect().x;\r\n\r\n\tfor (let i = 1; i < list.children.length; i++) {\r\n\t\tconst listItem = list.children[i];\r\n\t\tconst curItemX = listItem.getBoundingClientRect().x;\r\n\t\tif (Math.abs(visibleX - curItemX) < listItemWidth / 2) {\r\n\t\t\tconst mediaEl = queryVideoOrImg(listItem as HTMLElement);\r\n\t\t\treturn extractMediaFromElement(mediaEl);\r\n\t\t}\r\n\t}\r\n};\r\nconst getSingleMediaInfoByPostElement = (postElement: HTMLElement) => {\r\n\treturn extractMediaFromElement(findMediaElementInPost(postElement));\r\n};\r\nexport const getMediaInfoByHtml = (postElement: HTMLElement): SingleMediaInfo => {\r\n\tconst username = findUsernameInPost(postElement);\r\n\tconst postType = findTypeOfPost(postElement);\r\n\tconst media = postType === \"collection\" ? getCollectionMediaByPostElement(postElement) : getSingleMediaInfoByPostElement(postElement);\r\n\treturn { username, ...media };\r\n};\r\n\r\n\r\nexport function createMediaFetcherBySrcElement(postElement: HTMLElement) {\r\n\tlet currentMediaInfo: MediaInfo = null;\r\n\tlet currentPostType: PostType = null;\r\n\treturn async(): Promise<SingleMediaInfo> => {\r\n\t\tif (!currentPostType){\r\n\t\t\tcurrentPostType = findTypeOfPost(postElement);\r\n\t\t}\r\n\t\tif (!currentMediaInfo){\r\n\t\t\tconst postHref = getHrefOfPost(postElement);\r\n\t\t\tcurrentMediaInfo = await fetchMediaInfo(postHref);\r\n\t\t}\r\n\t\tconst username = currentMediaInfo.username;\r\n\t\tconst collectionIndex = currentPostType === \"collection\" ? getCurrentCollectionIndex(postElement) : 0;\r\n\t\treturn { username, ...currentMediaInfo.mediaArray[collectionIndex] }\r\n\t}\r\n}\r\n\r\n\r\nfunction calculatePostDistanceToViewport(postEl: HTMLElement): number {\r\n\tconst rect = postEl.getBoundingClientRect();\r\n\tconst centerY = (rect.top + rect.bottom) / 2;\r\n\treturn Math.abs(centerY - window.innerHeight / 2);\r\n}\r\nexport function findCurrentPost(): HTMLElement {\r\n\tconst posts = findMainFeedPosts();\r\n\tconst closestPostData: [number, HTMLElement] = posts.reduce(\r\n\t\t(acc: [number, HTMLElement], postEl: HTMLElement) => {\r\n\t\t\tconst dist = calculatePostDistanceToViewport(postEl);\r\n\t\t\treturn dist < acc[0] ? [dist, postEl] as [number, HTMLElement] : acc\r\n\t\t},\r\n\t\t[Infinity, null]\r\n\t);\r\n\treturn closestPostData[1];\r\n}\r\n\r\n\r\n//story ###\r\n\r\nexport const getSrcOfStory = (storyElement: HTMLElement): string => {\r\n\tconst video = storyElement.querySelector(\"video\");\r\n\tif (video !== null){\r\n\t\t//there seems to be several sources that have different file sizes\r\n\t\t//when downloaded. i want to get the biggest file, cuz that's probably\r\n\t\t//where the quality is. after some research i found out the sources use different\r\n\t\t//video codecs for compression.\r\n\t\t//there are 3 \"tiers\": baseline, main and high and that's what\r\n\t\t//these 3 numbers mean (42, 4D, 64). to get the highest possible level, \r\n\t\t//we just sort the sources by that tier\r\n\t\tconst sources = Array.from(video.querySelectorAll(\"source\"));\r\n\t\tconst codecOrder = [\"42\", \"4D\", \"64\"];\r\n\t\tconst getOrderOfCodec = (codec) => {\r\n\t\t\treturn codecOrder.findIndex(val => codec.type.includes(val));\r\n\t\t};\r\n\t\tconst sourceSortFunc = (a, b) => getOrderOfCodec(a) - getOrderOfCodec(b);\r\n\t\tsources.sort(sourceSortFunc);\r\n\t\treturn sources[sources.length - 1].src;\r\n\t}\r\n\telse {\r\n\t\tconst img = storyElement.querySelector('img[srcset]') as HTMLImageElement;\r\n\t\tif (img !== null){\r\n\t\t\treturn getHighestQualityFromSrcset(img.srcset);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\nexport const getUsernameByStoryUrl = (storyUrl: string): string => {\r\n\treturn /(?<=stories\\/).*?(?=\\/)/.exec(storyUrl)[0];\r\n};\r\nexport const getUsernameByStoryElement = (storyElement: HTMLElement) => {\r\n\treturn Array.from(\r\n\t\tstoryElement.querySelectorAll(\"span\")\r\n\t).find(span => span.children.length === 0).innerText;\r\n};\r\nexport const findStoryElement = (): HTMLElement => {\r\n\tconst parent = document.body;\r\n\tconst firstCanvas = parent.querySelector(\"button canvas\");\r\n\tif (!firstCanvas) {\r\n\t\treturn;\r\n\t}\r\n\tlet currentChild = firstCanvas.parentElement;\r\n\tfor (let a = 0; a < 10000; a++) {\r\n\t\tconst currentParent = currentChild.parentElement;\r\n\t\tif (!currentParent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (currentParent.offsetHeight - currentChild.offsetHeight < 0) {\r\n\t\t\treturn currentParent;\r\n\t\t}\r\n\t\tcurrentChild = currentParent;\r\n\t}\r\n\tconsole.warn(\"either something went wrong or the dom is very large\");\r\n};\r\n// export const storyNodeToData = (node: HTMLElement) => {\r\n// \treturn {\r\n// \t\tthumbnail: node.querySelector(\"img\").src,\r\n// \t\tname: getUsernameByStoryElement(node),\r\n// \t\trelativeTime: node.querySelector(\"time\").innerHTML,\r\n// \t\tseen: node.querySelector(\"canvas\").width < 55\r\n// \t};\r\n// };\r\n// export const getStoryData = (scrollEl: HTMLElement) => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\t//const scrollEl = null;\r\n// \t\tconst storyContainer = scrollEl.children[0];\r\n// \t\tconst stories = [];\r\n// \t\tconst storyElementHeight = 52;\r\n// \t\tconst scrollDeltaCount = 5;\r\n\r\n// \t\tconst childrenChangeObserver = new MutationObserver(async (mutations) => {\r\n// \t\t\tconst addedNodes = (mutations.map(\r\n// \t\t\t\tmutation => Array.from(mutation.addedNodes)\r\n// \t\t\t) as any).flat();\r\n// \t\t\tstories.push(...addedNodes.map(storyNodeToData));\r\n// \t\t\tconst scrollBottom = scrollEl.scrollHeight - (scrollEl.scrollTop + scrollEl.offsetHeight);\r\n// \t\t\tif (Math.abs(scrollBottom) < storyElementHeight / 2) {\r\n// \t\t\t\tchildrenChangeObserver.disconnect();\r\n// \t\t\t\tresolve(stories);\r\n// \t\t\t\treturn;\r\n// \t\t\t}\r\n// \t\t\tscrollEl.scrollBy(0, addedNodes.length * storyElementHeight);\r\n// \t\t});\r\n// \t\tchildrenChangeObserver.observe(storyContainer, { childList: true });\r\n\r\n// \t\t//start at top\r\n// \t\tscrollEl.scrollTop = 0;\r\n// \t\tstories.push(...Array.from(storyContainer.children).map(storyNodeToData));\r\n// \t\tscrollEl.scrollBy(0, scrollDeltaCount * storyElementHeight);\r\n// \t});\r\n// };\r\n","//object for detecting when a certain element has been added, \r\n//like post, preview, story\r\n\r\nimport { \r\n\tInstaElementType,\r\n\tfindMediaElementInPost, \r\n\tgetElementTypesOnCurrentPage,\r\n} from './insta-info-util';\r\n\r\n\r\n\r\ninterface InstaChangeDetector extends EventTarget {\r\n\tstart: () => void,\r\n};\r\nconst instaChangeDetector = new EventTarget() as InstaChangeDetector;\r\n\r\n\r\n\r\nconst getContainedPreviewElements = (element: HTMLElement): HTMLElement[] => {\r\n\treturn (Array.from(element.querySelectorAll('a[href*=\"/p/\"]')) as HTMLLinkElement[])\r\n\t\t.filter(el => el.querySelector(\"img\") != null)\r\n\t\t.map(el => el.parentElement);\r\n};\r\nconst getContainedPostElements = (element: HTMLElement): HTMLElement[] => {\r\n\tif (element.tagName == \"ARTICLE\")  return [element];\r\n\treturn Array.from(element.querySelectorAll(\"article\"));\r\n};\r\nconst getContainedStoryElements = (element: HTMLElement): HTMLElement[] => {\r\n\t//the story element is a <section> with classes _s7gs2  _d9zua (11.04.2018)\r\n\t//it has a header, and an explicit width\r\n\tif (element.tagName == \"SECTION\" && Array.from(element.children).findIndex(el => el.tagName == \"HEADER\") > 0) {\r\n\t\treturn [element];\r\n\t}\r\n\telse {\r\n\t\treturn Array.from(element.querySelectorAll(\"header\")).map(el => el.parentElement);\r\n\t}\r\n};\r\n\r\nclass ObservedElementType {\r\n\tonAdded: (element: HTMLElement) => void = null;\r\n\tonRemoved: (element: HTMLElement) => void = null;\r\n\tgetContainedElements: (parent: HTMLElement) => HTMLElement[] = null;\r\n\telementType: InstaElementType = null;\r\n\r\n\tconstructor(\r\n\t\telementType: InstaElementType, \r\n\t\tgetContainedElements: (parent: HTMLElement) => HTMLElement[], \r\n\t\tonAdded: (element: HTMLElement) => void, \r\n\t\tonRemoved: (element: HTMLElement) => void ){\r\n\t\t\r\n\t\tthis.onAdded = onAdded;\r\n\t\tthis.onRemoved = onRemoved;\r\n\t\tthis.getContainedElements = getContainedElements;\r\n\t\tthis.elementType = elementType;\r\n\t}\r\n\r\n\tmatchesType(elementTypes: InstaElementType[]): boolean {\r\n\t\treturn elementTypes.includes(this.elementType);\r\n\t}\r\n}\r\nconst observedElementTypes = [\r\n\tnew ObservedElementType(\"post\", getContainedPostElements, onPostAdded, onPostRemoved),\r\n\tnew ObservedElementType(\"preview\", getContainedPreviewElements, onPreviewAdded, onPreviewRemoved),\r\n\tnew ObservedElementType(\"story\", getContainedStoryElements, onStoryAdded, onStoryRemoved),\r\n];\r\nfunction invokeListener(name: string, element: HTMLElement){\r\n\tinstaChangeDetector.dispatchEvent(new CustomEvent(name, { detail: { element } }))\r\n}\r\n\r\n//preview ###\r\nfunction onPreviewAdded(previewElement: HTMLElement){\r\n\tinvokeListener(\"onPreviewAdded\", previewElement);\r\n}\r\nfunction onPreviewRemoved(previewElement: HTMLElement){\r\n\tinvokeListener(\"onPreviewRemoved\", previewElement);\r\n}   \r\n\r\n//post ###\r\nfunction onPostAdded(postElement: HTMLElement){\r\n\t// setupPostSrcChangeObserver(postElement);\r\n\tinvokeListener(\"onPostAdded\", postElement);\r\n}\r\nfunction onPostRemoved(postElement: HTMLElement){\r\n\tinvokeListener(\"onPostRemoved\", postElement);\r\n}\r\n\r\n\r\n//post change observation. when a post is opened by clicking a preview element,\r\n//the post-source can change, either when clicking the next or previous button, \r\n//or when it's a collection\r\n\r\n// let postChangeCallbackData = new WeakMap();\r\n// function addOnPostSrcChanged(postElement, callback){\r\n// \treturn;\r\n// \tif (!postChangeCallbackData.has(postElement)){\r\n// \t\tlet mediaElement = findMediaElementInPost(postElement);\r\n// \t\tlet data = {\r\n// \t\t\tcallbacks: [],\r\n// \t\t\tcurrentMediaElement: mediaElement\r\n// \t\t};\r\n// \t\tpostChangeCallbackData.set(postElement, data);\r\n// \t}\r\n// \tpostChangeCallbackData.get(postElement).callbacks.push(callback);\r\n// }\r\n// instaChangeDetector.addOnPostSrcChanged = addOnPostSrcChanged;\r\n// function onPostMutation(mutations){\r\n\t\r\n// \treturn;\r\n// \tlet postData = postChangeCallbackData.get(this);\r\n// \tlet oldMediaElement = postData.currentMediaElement;\r\n// \tlet newMediaElement = findMediaElementInPost(this);\r\n// \tif (newMediaElement.src != oldMediaElement.src){\r\n\r\n// \t\tpostData.callbacks.forEach(callback => callback());\r\n// \t\tpostData.currentMediaElement = newMediaElement;\r\n// \t}\r\n// }\r\n// function setupPostSrcChangeObserver(postElement){\r\n// \t//let observer = new MutationObserver(onPostMutation.bind(postElement));\r\n// \t//observer.observe(postElement, { childList: true, subtree: true });\r\n// }\r\n\r\n\r\n//story ###\r\nfunction onStoryAdded(storyElement: HTMLElement){\r\n\tinvokeListener(\"onStoryAdded\", storyElement);\r\n}\r\nfunction onStoryRemoved(storyElement: HTMLElement){\r\n\tinvokeListener(\"onStoryRemoved\", storyElement);\r\n}\r\n\r\n\r\n\r\n//mutation observer ###\r\n\r\nfunction onNodeExistenceChanged(node: HTMLElement, added: boolean){\r\n\tif (node.nodeType != 1)return;\r\n\r\n\tlet elementTypes = getElementTypesOnCurrentPage();\r\n\tfor (let observer of observedElementTypes){\r\n\t\tif (observer.matchesType(elementTypes)){\r\n\t\t\tlet contained = observer.getContainedElements(node);\r\n\t\t\tlet foreachFunc = added ? observer.onAdded : observer.onRemoved;\r\n\t\t\tcontained.forEach(foreachFunc);\r\n\t\t}\r\n\t}\r\n}\r\nfunction onNodeAdded(addedNode: HTMLElement){\r\n\tonNodeExistenceChanged(addedNode, true);\r\n}\r\nfunction onNodeRemoved(removedNode: HTMLElement){\r\n\tonNodeExistenceChanged(removedNode, false);\r\n}\r\n\r\nfunction onMutation(mutation: MutationRecord){\r\n\tmutation.addedNodes.forEach(onNodeAdded);\r\n\tmutation.removedNodes.forEach(onNodeRemoved);\r\n}\r\n\r\nfunction onMutations(mutationArray: MutationRecord[]){\r\n\tmutationArray.forEach(onMutation);\r\n}\r\n\r\nfunction startObservation(){\r\n\tvar observer = new MutationObserver(onMutations);\r\n\tobserver.observe(document, { childList: true, subtree: true });\r\n}\r\n\r\nfunction initCurrentElements(){\r\n\tonNodeAdded(document.body);\r\n}\r\n\r\n\r\n\r\nfunction start(){\r\n\tinitCurrentElements();\r\n\tstartObservation();\r\n}\r\ninstaChangeDetector.start = start;\r\n\r\nexport default instaChangeDetector;","export const createFileNameByUrl = (url: string): string => {\n\tconst endings = [\".mp4\", \".jpg\"];\n\tfor (let ending of endings) {\n\t\tconst index = url.indexOf(ending);\n\t\tif (index >= 0) {\n\t\t\tlet filename = url.substring(0, index + ending.length);\n\t\t\tfilename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n\t\t\treturn filename;\n\t\t}\n\t}\n};","import { DownloadRequest, DownloadResponse, DownloadErrorResponse, DownloadStateRequest } from \"./chrome-download-types\";\n\ntype ProgressCallback = (progress: number) => void;\n\nexport const download = (\n\tdata: { filePath: string, url: string },\n\tprogressCallback: ProgressCallback): Promise<void> => {\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst port = chrome.runtime.connect({\n\t\t\tname: \"chrome-downloader\"\n\t\t});\n\n\t\tlet downloadId = null;\n\t\tconst requestState = () => {\n\t\t\tport.postMessage({\n\t\t\t\ttype: \"request-state\",\n\t\t\t\tid: downloadId\n\t\t\t} as DownloadStateRequest);\n\t\t};\n\t\tport.onMessage.addListener((answer: DownloadResponse) => {\n\t\t\tif (answer.type === \"download-id\"){\n\t\t\t\tdownloadId = answer.id;\n\t\t\t\trequestState();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"error\"){\n\t\t\t\treject(answer.error);\n\t\t\t\tport.disconnect();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"success\") {\n\t\t\t\tresolve();\n\t\t\t\tport.disconnect();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (answer.type === \"progress\"){\n\t\t\t\tprogressCallback(answer.progress.progress);\n\t\t\t\trequestState();\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tport.postMessage({\n\t\t\ttype: \"request-download\",\n\t\t\tfilePath: data.filePath,\n\t\t\turl: data.url\n\t\t} as DownloadRequest);\n\t});\n};","\r\ninterface DiskDownloadArgs {\r\n\tlink: string,\r\n\tfolderPath: string,\r\n\tfileName: string\r\n};\r\n\r\ntype DownloadProgressCallback = (progress: number) => void;\r\n\r\nexport const download = (\r\n\tdata: DiskDownloadArgs, \r\n\tprogressCallback: DownloadProgressCallback): Promise<unknown> => {\r\n\r\n\tconst messageData = {\r\n\t\trequests: [\r\n\t\t\t{\r\n\t\t\t\taction: \"write media by link\",\r\n\t\t\t\tdata\r\n\t\t\t}\r\n\t\t],\r\n\t\ttime: window.performance.now()\r\n\t};\r\n\r\n\tlet _resolve: Function = null; \r\n\tlet _reject: Function = null;\r\n\tconst downloadPromise = new Promise((res, rej) => {\r\n\t\t_resolve = res;\r\n\t\t_reject = rej;\r\n\t});\r\n\r\n\t//long lived connection\r\n\tconst port = chrome.runtime.connect({ \r\n\t\tname: \"disk-downloader\" \r\n\t});\r\n\tport.onMessage.addListener((answer, sender) => {\r\n\t\tif (answer.origin === \"native host disconnect\") {\r\n\t\t\t_reject(answer.data);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (answer.origin === \"native host response\") {\r\n\t\t\tconst resultEntry = answer.data[0];\r\n\t\t\tconst resultEntryType = resultEntry.type;\r\n\t\t\tif (resultEntryType === \"success\") {\r\n\t\t\t\t_resolve();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (resultEntryType === \"error\") {\r\n\t\t\t\t_reject(resultEntry.data);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (resultEntryType === \"progress\"){\r\n\t\t\t\tprogressCallback(resultEntry.data.progress);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst responseType = answer.data[0].type;\r\n\t\tif (responseType === \"success\"){\r\n\t\t\tport.disconnect();\r\n\t\t}\r\n\t});\r\n\tport.postMessage(messageData);\r\n\r\n\treturn downloadPromise;\r\n};\r\n","﻿\ninterface FolderPathLookupArgs {\n\tmediaSrc: string,\n\tuserName: string,\n\townUserName: string\n};\n\nconst getFolderPathByItems = (userName: string, ownUserName: string, items: any): string => {\n\tconst directoryRules = items.directoryRules || [];\n\tdirectoryRules.reverse();\n\n\tconst baseDownloadDirectory = items.baseDownloadDirectory || \"\";\n\n\tconst unifiedRules = [\n\t\t...directoryRules,\n\t\t{ baseDirectory: baseDownloadDirectory }\n\t];\n\n\tfor (let rule of unifiedRules) {\n\t\tconst usernamesToMatch = rule.username || [];\n\t\tconst ownUsernamesToMatch = rule.downloadAs || [];\n\t\tconst baseDirectory = rule.baseDirectory || \"\";\n\t\tconst folderPath = rule.folderPath || \"\";\n\t\tconst ruleApplies =\n\t\t\t(usernamesToMatch.length === 0 || usernamesToMatch.includes(userName)) &&\n\t\t\t(ownUsernamesToMatch.length === 0 || ownUsernamesToMatch.includes(ownUserName));\n\t\tif (!ruleApplies) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet writePath = null;\n\t\tif (baseDirectory !== \"\") {\n\t\t\twritePath = `${baseDirectory}/${userName}`;\n\t\t}\n\t\tif (folderPath !== \"\") {\n\t\t\twritePath = folderPath;\n\t\t}\n\t\tif (writePath !== null) {\n\t\t\treturn writePath;\n\t\t}\n\t}\n};\n\nexport const getFolderPath = async (args: FolderPathLookupArgs): Promise<string> => {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get(\n\t\t\t{\n\t\t\t\tbaseDownloadDirectory: \"\",\n\t\t\t\tdirectoryRules: []\n\t\t\t},\n\t\t\t(items) => {\n\t\t\t\tconst path = getFolderPathByItems(args.userName, args.ownUserName, items);\n\t\t\t\tif (!path){\n\t\t\t\t\treject(\"no path found. have you set a path in the extension-options?\")\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(path);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t});\n};","import { getElementTypesOnCurrentPage } from '../insta-info-util';\n\n\ntype DownloadState = \"initial\" | \"loading\" | \"success\" | \"fail\";\n\nconst iconNames = {\n\tinitial: \"save\",\n\tloading: \"spinner-of-dots\",\n\tsuccess: \"verify-sign-green\",\n\tfail: \"error\"\n};\n\nexport class DownloadFeedbackButton {\n\t\n\t_downloadState: DownloadState = \"initial\";\n\tget downloadState(): DownloadState {\n\t\treturn this._downloadState;\n\t}\n\tset downloadState(val: DownloadState){\n\t\tthis._downloadState = val;\n\t\tthis._onDownloadStateChanged();\n\t}\n\t\n\t_loadingProgress: number = 0;\n\tget loadingProgress(): number {\n\t\treturn this._loadingProgress;\n\t}\n\tset loadingProgress(val: number) {\n\t\tthis._loadingProgress = val;\n\t\tif (this._downloadState === \"loading\"){\n\t\t\tthis._drawSpinner();\n\t\t}\n\t}\n\n\t_spinnerCtx = null;\n\t_spinnerCanvas = null;\n\t_buttonImg = null;\n\t_rootElement = null;\n\n\tconstructor(){\n\t\tthis._rootElement = document.createElement(\"a\");\n\t\tthis._rootElement.classList.add(\"download-button\");\n\t\tObject.assign(this._rootElement.style, {\n\t\t\twidth: \"fit-content\",\n\t\t\theight: \"fit-content\",\n\t\t\tcursor: \"pointer\"\n\t\t});\n\t\tthis._buttonImg = document.createElement(\"img\");\n\t\tObject.assign(this._buttonImg.style, {\n\t\t\twidth: \"inherit\",\n\t\t\theight: \"inherit\"\n\t\t});\n\t\tthis._rootElement.appendChild(this._buttonImg);\n\t\tthis._setInitialState();\n\t}\n\tgetElement(): HTMLElement {\n\t\treturn this._rootElement;\n\t}\n\t_setInitialState(){\n\t\tlet elementType = getElementTypesOnCurrentPage()[0];\n\t\tlet iconAppendix = elementType == \"post\" ? \"dark\" : \"white\";\n\t\tconst iconName = `${iconNames[\"initial\"]}-${iconAppendix}`;\n\t\tthis._buttonImg.src = chrome.extension.getURL(`icons/${iconName}.png`);\n\t}\n\t_onDownloadStateChanged(){\n\t\tconst state = this._downloadState;\n\t\tif (state === \"loading\"){\n\t\t\t//lazily instantiate canvas\n\t\t\tif (!this._spinnerCanvas){\n\t\t\t\tthis._spinnerCanvas = document.createElement(\"canvas\");\n\t\t\t\tthis._spinnerCtx = this._spinnerCanvas.getContext(\"2d\");\n\t\t\t\tthis._drawSpinner();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._spinnerCanvas = null;\n\t\t\tthis._spinnerCtx = null;\n\n\t\t\tlet iconName = iconNames[state];\n\t\t\tif (state === \"initial\") {\n\t\t\t\tlet elementType = getElementTypesOnCurrentPage()[0];\n\t\t\t\tlet iconAppendix = elementType == \"post\" ? \"dark\" : \"white\";\n\t\t\t\ticonName += `-${iconAppendix}`;\n\t\t\t}\n\t\t\tthis._buttonImg.src = chrome.extension.getURL(`icons/${iconName}.png`);\n\t\t}\n\t}\n\t_drawSpinner(){\n\t\tconst ctx = this._spinnerCtx;\n\t\tconst progress = this._loadingProgress;\n\t\tconst squareSize = 32;\n\t\tObject.assign(this._spinnerCanvas, {\n\t\t\twidth: squareSize,\n\t\t\theight: squareSize\n\t\t});\n\t\tctx.clearRect(0, 0, squareSize, squareSize);\n\t\tctx.lineWidth = 4;\n\t\tconst radius = (squareSize - ctx.lineWidth) / 2;\n\t\tctx.strokeStyle = \"cyan\";\n\t\tctx.lineCap = \"round\";\n\t\tctx.beginPath();\n\t\tconst squareSizeHalf = squareSize / 2;\n\t\tconst angleOffset = -Math.PI / 2;\n\t\tctx.arc(squareSizeHalf, squareSizeHalf, radius, angleOffset, angleOffset + progress * 2 * Math.PI);\n\t\tctx.stroke();\n\n\t\tthis._buttonImg.src = this._spinnerCanvas.toDataURL();\n\t}\n};","import { createFileNameByUrl } from \"../../lib/url-to-filename\";\nimport { download as downloadByChrome } from '../disk-writing/chrome-download';\nimport { download as storeOnDisk } from '../disk-writing/disk-download';\nimport { getFolderPath } from \"../disk-writing/lookup-write-path\";\nimport { getOwnUsername } from \"../insta-info-util\";\nimport { DownloadFeedbackButton } from \"./download-feedback-button\";\n\n\nexport interface MediaWriteInfo {\n\tsrc: string,\n\tusername: string\n};\nexport type LoadingCallback = (progress: number) => void;\n\ntype DownloadMethod = \"native\" | \"chrome-background\";\nconst defaultDownloadMethod: DownloadMethod = \"chrome-background\";\n\nconst getDownloadMethod = (): Promise<DownloadMethod> => {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get(\n\t\t\t{ downloadMethod: defaultDownloadMethod },\n\t\t\t(items: { downloadMethod: DownloadMethod }) => {\n\t\t\t\tif (chrome.runtime.lastError){\n\t\t\t\t\treject(chrome.runtime.lastError.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(items.downloadMethod);\n\t\t\t}\n\t\t);\n\t});\n};\n\nconst downloadInBackground = async (mediaInfo: MediaWriteInfo, loadingCallback: LoadingCallback): Promise<void> => {\n\tconst downloadMethod = await getDownloadMethod();\n\tconst mediaSrc = mediaInfo.src;\n\tconst fileName = createFileNameByUrl(mediaSrc);\n\n\tif (downloadMethod === \"native\") {\n\t\tconst ownUserName = getOwnUsername();\n\t\tconst folderPath = await getFolderPath({\n\t\t\tmediaSrc,\n\t\t\tuserName: mediaInfo.username,\n\t\t\townUserName\n\t\t});\n\t\tawait storeOnDisk(\n\t\t\t{\n\t\t\t\tlink: mediaSrc,\n\t\t\t\tfolderPath,\n\t\t\t\tfileName\n\t\t\t},\n\t\t\tloadingCallback\n\t\t);\n\t}\n\telse if (downloadMethod === \"chrome-background\"){\n\t\tawait downloadByChrome({\n\t\t\tfilePath: `Instagram/${mediaInfo.username}/${fileName}`,\n\t\t\turl: mediaSrc\n\t\t}, loadingCallback);\n\t}\n};\n\nexport interface DiskDownloadButtonOptions {\n\tonDownloadStart: () => void,\n\tonDownloadEnd: () => void\n};\nconst downloadFileIndirectly = async (\n\tgetMediaInfo: () => Promise<MediaWriteInfo>,\n\tloadingCallback: LoadingCallback) => {\n\n\tlet mediaInfo: MediaWriteInfo = null;\n\ttry {\n\t\tmediaInfo = await getMediaInfo();\n\t\tawait downloadInBackground(mediaInfo, loadingCallback);\t\t\n\t}\n\tcatch (error) {\n\t\tconsole.error(error);\n\t\tconst message = mediaInfo ? `${error}, \\n user: ${mediaInfo.username}, \\n src: ${mediaInfo.src}` : error;\n\t\tchrome.runtime.sendMessage({\n\t\t\ttype: \"show-notification\",\n\t\t\tnotification: {\n\t\t\t\ttitle: \"download failed\",\n\t\t\t\tmessage,\n\t\t\t\ticonUrl: chrome.extension.getURL(\"icons/insta-loader-icon-48.png\")\n\t\t\t}\n\t\t});\n\n\t\t//throw the error again for caller\n\t\tthrow error;\n\t}\n};\nexport const createDiskDownloadButton = (\n\tgetMediaInfo: () => Promise<MediaWriteInfo>,\n\toptions: Partial<DiskDownloadButtonOptions> = {}): HTMLElement => {\n\n\toptions = {\n\t\tonDownloadStart: () => { },\n\t\tonDownloadEnd: () => { },\n\t\t...options\n\t};\n\n\tconst buttonWrapper = new DownloadFeedbackButton();\n\tconst buttonEl = buttonWrapper.getElement();\n\tconst startDownload = async () => {\n\t\tbuttonWrapper.downloadState = \"loading\";\n\t\tconst updateProgress = (progress: number) => buttonWrapper.loadingProgress = progress;\n\t\toptions.onDownloadStart();\n\t\ttry {\n\t\t\tawait downloadFileIndirectly(getMediaInfo, updateProgress);\n\t\t\tbuttonWrapper.downloadState = \"success\";\n\t\t}\n\t\tcatch (e){\n\t\t\tbuttonWrapper.downloadState = \"fail\";\n\t\t}\n\t\toptions.onDownloadEnd();\n\t};\n\tbuttonEl.addEventListener(\"download-request\", startDownload);\n\tbuttonEl.addEventListener(\"mousedown\", startDownload);\n\treturn buttonEl;\n};","export const createElementByHTML = (html: string): HTMLElement => {\n\tconst wrapper = document.createElement(\"div\") as HTMLDivElement;\n\twrapper.innerHTML = html;\n\treturn wrapper.firstElementChild as HTMLElement;\n};\n\nexport function querySelectorAncestor(query: string, el: HTMLElement): HTMLElement {\n\tlet curParent = el;\n\tfor (let i = 0; i < 1000; i++){\n\t\tif (curParent.matches(query)){\n\t\t\treturn curParent;\n\t\t}\n\t\tcurParent = curParent.parentElement;\n\t}\n\treturn null;\n}","import { MediaWriteInfo, createDiskDownloadButton } from \"../download-buttons/disk-download-button\";\nimport { getPreviewSrcOfPost, getMediaInfoByHtml, createMediaFetcherBySrcElement } from \"../insta-info-util\";\nimport { createElementByHTML } from \"../../lib/html-util\";\n\nconst findInteractionSection = (postElement: HTMLElement): HTMLElement => {\n\treturn postElement.querySelector(\"section\");\n};\nconst findSavePostElement = (postElement: HTMLElement): Element => {\n\tconst section = postElement.querySelector(\"section\");\n\tif (!section) {\n\t\tconsole.warn(\"section with buttons not found\");\n\t\treturn;\n\t}\n\tconst svgs = Array.from(section.querySelectorAll(\"svg\"));\n\treturn svgs[svgs.length - 1];\n};\nconst getPostDownloadElementStyle = (postElement: HTMLElement): Partial<CSSStyleDeclaration> => {\n\tconst saveToCollectionEl = findSavePostElement(postElement);\n\tconst saveToCollectionButton = saveToCollectionEl.parentElement;\n\tconst size = saveToCollectionEl.clientHeight + \"px\";\n\tconst padding = getComputedStyle(saveToCollectionButton).getPropertyValue(\"padding\");\n\treturn {\n\t\twidth: size,\n\t\theight: size,\n\t\tpadding,\n\t};\n};\nconst applyPostDownloadElementStyle = (postElement: HTMLElement, element: HTMLElement) => {\n\tObject.assign(element.style, getPostDownloadElementStyle(postElement));\n};\nconst getMediaSrcOfPostElement = (postElement: HTMLElement): Promise<MediaWriteInfo> => {\n\tlet previewSrc = getPreviewSrcOfPost(postElement);\n\tif (!previewSrc) {\n\t\treturn Promise.reject(\"preview-src not found\");\n\t}\n\tconst data = getMediaInfoByHtml(postElement);\n\treturn Promise.resolve(data);\n};\nexport const injectDownloadButtonsIntoPost = (postElement: HTMLElement) => {\n\tconst sectionEl = findInteractionSection(postElement);\n\n\tconst bar = createElementByHTML(`\n\t\t<div \n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex; \n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 8px;\n\t\t\t\tpadding-right: 0px;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\"\n\t\t></div>\n\t`);\n\t// const getMediaSrc = () => getMediaSrcOfPostElement(postElement);\n\tconst getMediaSrc = createMediaFetcherBySrcElement(postElement);\n\tconst downloadButton = createDiskDownloadButton(getMediaSrc);\n\tapplyPostDownloadElementStyle(postElement, downloadButton);\n\tbar.appendChild(downloadButton);\n\n\tsectionEl.insertAdjacentElement(\"beforeend\", bar);\n};","import { MediaWriteInfo, createDiskDownloadButton } from \"../download-buttons/disk-download-button\";\nimport { fetchMediaInfo } from \"../insta-info-util\";\nimport { createElementByHTML } from \"../../lib/html-util\";\n\nconst getMediaSrcOfPreviewElement = async (previewEl: HTMLElement): Promise<MediaWriteInfo> => {\n\tconst linkElement = previewEl.querySelector(\"a\");\n\tif (linkElement === null) {\n\t\tthrow \"link-element not found\";\n\t}\n\tlet postHref = linkElement.href;\n\n\tconst data = await fetchMediaInfo(postHref);\n\tlet src = data.mediaArray[0].src;\n\tlet username = data.username;\n\treturn { username, src };\n};\nexport const injectDownloadButtonsIntoPreview = (previewEl: HTMLElement) => {\n\tconst previewOverlay = createElementByHTML(`\n\t\t<div style=\"\n\t\t\t\twidth: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0px;\n\t\t\t\tbottom: 0px;\n\t\t\t\tflex-direction: row;\"\n\t\t>\n\t\t</div>\n\t`);\n\tconst getMediaSrc = () => getMediaSrcOfPreviewElement(previewEl);\n\tconst diskDownloadButton = createDiskDownloadButton(getMediaSrc);\n\tObject.assign(diskDownloadButton.style, {\n\t\twidth: \"24px\",\n\t\theight: \"24px\",\n\t\tpadding: \"5px\"\n\t});\n\tpreviewOverlay.appendChild(diskDownloadButton);\n\n\tpreviewEl.appendChild(previewOverlay);\n};","import { findCurrentPost } from \"./insta-info-util\";\n\nexport const downloadKey = \"Enter\";\n\nexport function requestDownloadByButton(downloadButton: HTMLElement){\n\tdownloadButton.dispatchEvent(new CustomEvent(\"download-request\"));\n}\n\nfunction findDownloadButton(postEl: HTMLElement): HTMLElement {\n\treturn postEl.querySelector(\".download-button\");\n}\nfunction downloadCurrentPostMedia(){\n\tconst curPost = findCurrentPost();\n\tif (!curPost){\n\t\tconsole.warn(\"could not find current post\");\n\t\treturn;\n\t}\n\tconst downloadButton = findDownloadButton(curPost);\n\tif (!downloadButton) {\n\t\tconsole.warn(\"could not find download-button\");\n\t\treturn;\n\t}\n\trequestDownloadByButton(downloadButton);\n}\n\ndocument.addEventListener(\"keydown\", e => {\n\tif (e.key === downloadKey){\n\t\tdownloadCurrentPostMedia();\n\t}\n})","import { MediaWriteInfo, createDiskDownloadButton, DiskDownloadButtonOptions } from \"../download-buttons/disk-download-button\";\nimport { getSrcOfStory, getUsernameByStoryUrl } from \"../insta-info-util\";\nimport { createElementByHTML, querySelectorAncestor } from \"../../lib/html-util\";\nimport { downloadKey, requestDownloadByButton } from \"../download-shortcut\";\n\n\nconst findCloseStoryElement = (storyEl: HTMLElement): HTMLElement => {\n\treturn storyEl.querySelector(\".coreSpriteCloseLight\").children[0] as HTMLElement;\n};\nconst getMediaSrcOfStoryElement = (storyEl: HTMLElement): Promise<MediaWriteInfo> => {\n\ttry {\n\t\tconst src = getSrcOfStory(storyEl);\n\t\tconst username = getUsernameByStoryUrl(window.location.href);\n\t\treturn Promise.resolve({ src, username });\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n};\nconst getStoryDownloadElementStyle = (storyEl: HTMLElement): Partial<CSSStyleDeclaration> => {\n\tconst closeSprite = findCloseStoryElement(storyEl);\n\tconst size = closeSprite.clientHeight + \"px\";\n\tconst blueprintEl = closeSprite.parentElement.parentElement;\n\tconst margin = getComputedStyle(blueprintEl).getPropertyValue(\"margin\");\n\treturn {\n\t\twidth: size,\n\t\theight: size,\n\t\tmargin\n\t};\n};\n\ninterface StoryPauseHandle {\n\tkeepPaused: () => void,\n\tcontinue: () => void\n};\nconst createStoryPauseHandle = (): StoryPauseHandle => {\n\tlet _storyPaused = false;\n\tconst video = document.querySelector(\"video\");\n\tconst keepStoryPaused = () => {\n\t\t_storyPaused = true;\n\t\tconst loop = () => {\n\t\t\tif (!video.paused) {\n\t\t\t\tvideo.pause();\n\t\t\t}\n\t\t\tif (!_storyPaused) return;\n\t\t\twindow.requestAnimationFrame(loop);\n\t\t};\n\t\tloop();\n\t};\n\tconst continueStory = () => {\n\t\t_storyPaused = false;\n\t};\n\treturn {\n\t\tkeepPaused: keepStoryPaused,\n\t\tcontinue: continueStory\n\t}\n};\n\nfunction findSvgPauseOrPlayButton(){\n\tconst pauseButton = document.querySelector(\"*[aria-label=Pause]\") as HTMLElement;\n\tif (pauseButton) return pauseButton;\n\n\tconst playButtonSvg = document.querySelector(\"*[aria-label=Play]\") as HTMLElement;\n\treturn playButtonSvg;\n}\n\nfunction findStoryPlayButton(){\n\tconst svgButton = findSvgPauseOrPlayButton();\n\tif (!svgButton){\n\t\tconsole.warn(\"could not add download-button in story. the svg for the pause/play button could not be found\");\n\t\treturn;\n\t}\n\tconst playButton = querySelectorAncestor(\"button\", svgButton);\n\tif (!playButton) {\n\t\tconsole.warn(\"could not add download-button in story. the svg for the pause/play button has not button as an ancestor\");\n\t\treturn;\n\t}\n\treturn playButton;\n}\n\nexport const injectDownloadButtonsIntoStory = (storyEl: HTMLElement) => {\n\tconst container = createElementByHTML(`\n\t\t<div style=\"margin-right: 20px;\"></div>\n\t`);\n\n\tconst pauseHandleDownloadOptions = ((): DiskDownloadButtonOptions => {\n\t\tlet pauseHandle: StoryPauseHandle = null;\n\t\treturn {\n\t\t\tonDownloadStart: () => {\n\t\t\t\tif (document.querySelector(\"video\")){\n\t\t\t\t\tpauseHandle = createStoryPauseHandle();\n\t\t\t\t\tpauseHandle.keepPaused();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDownloadEnd: () => {\n\t\t\t\tif (!pauseHandle) return;\n\t\t\t\tpauseHandle.continue();\n\t\t\t}\n\t\t};\n\t})();\n\tconst diskDownloadButton = createDiskDownloadButton(\n\t\t() => getMediaSrcOfStoryElement(storyEl),\n\t\tpauseHandleDownloadOptions\n\t);\n\t// Object.assign(diskDownloadButton.style, getStoryDownloadElementStyle(storyEl));\n\tcontainer.appendChild(diskDownloadButton);\n\t\n\tconst playButton = findStoryPlayButton();\n\tconst buttonContainer = playButton.parentElement;\n\tbuttonContainer.insertAdjacentElement(\"afterbegin\", container);\n\n\tdocument.addEventListener(\"keypress\", e => {\n\t\tif (e.key === downloadKey){\n\t\t\trequestDownloadByButton(diskDownloadButton);\n\t\t}\n\t});\n};","\r\nimport instaChangeDetector from '../insta-change-detection';\r\nimport { injectDownloadButtonsIntoPost } from './post-extension';\r\nimport { injectDownloadButtonsIntoPreview } from './preview-extension';\r\nimport { injectDownloadButtonsIntoStory } from './story-extension';\r\n\r\n\r\ninstaChangeDetector.addEventListener(\"onPostAdded\", e => {\r\n\tinjectDownloadButtonsIntoPost((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.addEventListener(\"onPreviewAdded\", e => {\r\n\tinjectDownloadButtonsIntoPreview((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.addEventListener(\"onStoryAdded\", e => {\r\n\tinjectDownloadButtonsIntoStory((e as any).detail.element);\r\n});\r\n\r\ninstaChangeDetector.start();\r\n","﻿import { findMainFeedPosts } from \"./insta-info-util\";\n\nconst scrollTolerance = 30;\n\nfunction calculateWindowBottomToDownloadBottomDifference(postEl: HTMLElement): number {\n\tconst downloadButtonContainer = postEl.querySelector(\"section\");\n\tconst downloadButtonBottom = downloadButtonContainer.getBoundingClientRect().bottom;\n\tconst windowBottom = window.innerHeight;\n\treturn windowBottom - downloadButtonBottom;\n}\n\nfunction isNextPost(postEl: HTMLElement, index: number): boolean {\n\treturn calculateWindowBottomToDownloadBottomDifference(postEl) < -scrollTolerance\n}\nfunction isPrevPost(postEl: HTMLElement, index: number): boolean {\n\treturn calculateWindowBottomToDownloadBottomDifference(postEl) > scrollTolerance\n}\n\nfunction findNextPost(): HTMLElement {\n\treturn findMainFeedPosts().find(isNextPost)\n}\nfunction findPrevPost(): HTMLElement {\n\treturn findMainFeedPosts().reverse().find(isPrevPost)\n}\n\nfunction scrollToPost(findFunc: () => HTMLElement){\n\tconst postEl = findFunc();\n\tif (!postEl){\n\t\tconsole.warn(\"could not find post to scroll to\");\n\t\treturn;\n\t}\n\tconst scrollDelta = -calculateWindowBottomToDownloadBottomDifference(postEl);\n\tconst targetScrollTop = window.scrollY + scrollDelta;\n\twindow.scrollTo({\n\t\tleft: window.scrollX,\n\t\ttop: targetScrollTop,\n\t\tbehavior: \"smooth\"\n\t});\n}\n\nconst upButton = \"w\";\nconst downKey = \"s\";\n\ndocument.addEventListener(\"keydown\", e => {\n\tif (e.key === upButton){\n\t\tscrollToPost(findPrevPost);\n\t}\n\telse if (e.key === downKey){\n\t\tscrollToPost(findNextPost);\n\t}\n});","import { findCurrentPost, findStoryElement } from \"./insta-info-util\";\nimport { getCurrentPageType } from \"./insta-navigation-observer\";\n\n\ntype NavigationDirection = \"left\" | \"right\";\nconst keyToDirection = {\n\t\"a\": \"left\", \"d\": \"right\"\n};\nconst directionToNaviButtonClass = {\n\t\"left\": \"LeftChevron\",\n\t\"right\": \"RightChevron\"\n};\n\nfunction navigate(direction: NavigationDirection){\n\tconst pageType = getCurrentPageType();\n\tconsole.log(pageType);\n\tconst parentElement = pageType === \"stories\" ? document.body : findCurrentPost();\n\tif (!parentElement){\n\t\tconsole.warn(\"could not find current-element\");\n\t\treturn;\n\t}\n\tconst naviClass = directionToNaviButtonClass[direction];\n\tconst naviEl1 = parentElement.querySelector(`[class*=\"${naviClass}\"]`);\n\tif (!naviEl1){\n\t\tconsole.warn(\"could not find navigation-element\");\n\t\treturn;\n\t}\n\tconst naviButton = naviEl1.parentElement;\n\tnaviButton.click();\n}\n\ndocument.addEventListener(\"keydown\", e => {\n\tconst direction = keyToDirection[e.key];\n\tif (!direction) return;\n\tnavigate(direction);\n});","import './download-extension/combined-download-extension';\nimport './post-scroll-navigation';\nimport './horizontal-navigation';\nimport './download-shortcut';\n// import './story-scroll-persistence';\n// import './linkify-stories';"]}