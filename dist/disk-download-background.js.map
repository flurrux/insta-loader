{"mappings":"AAkEAA,OAAOC,QAAQC,UAAUC,aAAY,SAAUC,GAC5B,oBAAdA,EAAKC,MACTD,EAAKE,UAAUH,aAAY,SAAUI,EAAKC,GAjCf,EAACC,EAASD,EAAQE,KAC7CC,QAAQC,IAAI,gCACZD,QAAQC,IAAI,UAAWH,aAGhBL,EAAOJ,OAAOC,QAAQY,cAPP,qBAQrBT,EAAKE,UAAUH,aAAYW,IAC1BH,QAAQC,IAAI,0BAA2BE,GACvCJ,EAAAA,CACCK,OAAQ,uBACRC,KAAMF,OAGRV,EAAKa,aAAad,aAAY,WACvBe,EAAelB,OAAOC,QAAQkB,UAAUL,QAC9CH,QAAQC,IAAI,gCAAiCM,GAC7CR,EAAAA,CACCK,OAAQ,yBACRC,KAAME,aAIFE,EAAgBC,KAAKC,UAAUb,GACrCL,EAAKmB,YAAYH,SAEZI,eACLb,QAAQC,IAAIY,KAQZC,CAAoBlB,EAAKC,GAAQkB,IAChCtB,EAAKmB,YAAYG","sources":["./app/src/disk-writing/disk-download-background.ts"],"sourcesContent":["/**\r\n * Created by Christian on 15.08.2017.\r\n */\r\n\r\ninterface NativeProgressResponse {\r\n\ttype: \"progress\",\r\n\tdata: {\r\n\t\tprogress: number\r\n\t}\r\n};\r\ninterface NativeHostErrorResponse {\r\n\ttype: \"error\",\r\n\tdata: \"wrong action-key\" |\r\n\t\"wrong data-key\" |\r\n\t\"wrong link-key\" |\r\n\t\"wrong folderPath-key\" |\r\n\t\"wrong fileName-key\" |\r\n\tstring;\r\n};\r\ninterface NativeDownloadSuccessResponse {\r\n\ttype: \"success\",\r\n\tdata: string\r\n};\r\ntype NativeHostResponse = NativeHostErrorResponse |\r\n\tNativeDownloadSuccessResponse |\r\n\tNativeProgressResponse;\r\n\r\ninterface ResponseToForeground {\r\n\torigin: string,\r\n\tdata: string | NativeHostResponse\r\n};\r\n\r\n\r\nconst nativeHostName = \"insta_loader_host\";\r\n\r\nconst connectToNativeHost = (request, sender, responseFunc) => {\r\n\tconsole.log(\"connecting to native host...\");\r\n\tconsole.log(\"request\", request);\r\n\tconst hostName = nativeHostName;\r\n\ttry {\r\n\t\tconst port = chrome.runtime.connectNative(hostName);\r\n\t\tport.onMessage.addListener(message => {\r\n\t\t\tconsole.log(\"received native message\", message);\r\n\t\t\tresponseFunc({\r\n\t\t\t\torigin: \"native host response\", \r\n\t\t\t\tdata: message    \r\n\t\t\t} as ResponseToForeground);\r\n\t\t});\r\n\t\tport.onDisconnect.addListener(() => {\r\n\t\t\tconst errorMessage = chrome.runtime.lastError.message;\r\n\t\t\tconsole.log(\"disconnected from native host\", errorMessage);\r\n\t\t\tresponseFunc({\r\n\t\t\t\torigin: \"native host disconnect\", \r\n\t\t\t\tdata: errorMessage\r\n\t\t\t} as ResponseToForeground);\r\n\t\t});\r\n\r\n\t\tconst requestString = JSON.stringify(request);\r\n\t\tport.postMessage(requestString);\r\n\t}\r\n\tcatch(e){\r\n\t\tconsole.log(e);\r\n\t\treturn;\r\n\t}\r\n};\r\n\r\nchrome.runtime.onConnect.addListener(function (port) {\r\n\tif (port.name !== \"disk-downloader\") return;\r\n\tport.onMessage.addListener(function (msg, sender) {\r\n\t\tconnectToNativeHost(msg, sender, response => {\r\n\t\t\tport.postMessage(response);\r\n\t\t});\r\n\t});\r\n});"],"names":["chrome","runtime","onConnect","addListener","port","name","onMessage","msg","sender","request","responseFunc","console","log","connectNative","message","origin","data","onDisconnect","errorMessage","lastError","requestString","JSON","stringify","postMessage","e","$7a20e2df226d2095fb0ccf1591a0fb54$var$connectToNativeHost","response"],"version":3,"file":"disk-download-background.js.map"}